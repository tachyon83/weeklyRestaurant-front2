[{"C:\\project\\weeklyRestaurant2\\front\\src\\index.js":"1","C:\\project\\weeklyRestaurant2\\front\\src\\App.jsx":"2","C:\\project\\weeklyRestaurant2\\front\\src\\component\\Navigation.jsx":"3","C:\\project\\weeklyRestaurant2\\front\\src\\component\\Login.jsx":"4","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingDetail.jsx":"5","C:\\project\\weeklyRestaurant2\\front\\src\\component\\Main.jsx":"6","C:\\project\\weeklyRestaurant2\\front\\src\\component\\Inventory.jsx":"7","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingList.jsx":"8","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingForm.jsx":"9","C:\\project\\weeklyRestaurant2\\front\\src\\host.js":"10","C:\\project\\weeklyRestaurant2\\front\\src\\component\\InventoryItem.jsx":"11","C:\\project\\weeklyRestaurant2\\front\\src\\component\\InventoryPopup.jsx":"12","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingDetailPop.jsx":"13","C:\\project\\weeklyRestaurant2\\front\\src\\component\\Calendar.jsx":"14","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingListPop.jsx":"15","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingListItem.jsx":"16","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CalendarItem.jsx":"17","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingFormSelectOption.jsx":"18","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingFormCustomOption.jsx":"19","C:\\project\\weeklyRestaurant-front2\\src\\index.js":"20","C:\\project\\weeklyRestaurant-front2\\src\\App.jsx":"21","C:\\project\\weeklyRestaurant-front2\\src\\component\\Navigation.jsx":"22","C:\\project\\weeklyRestaurant-front2\\src\\component\\Login.jsx":"23","C:\\project\\weeklyRestaurant-front2\\src\\component\\Inventory.jsx":"24","C:\\project\\weeklyRestaurant-front2\\src\\component\\CookingList.jsx":"25","C:\\project\\weeklyRestaurant-front2\\src\\component\\Main.jsx":"26","C:\\project\\weeklyRestaurant-front2\\src\\component\\CookingForm.jsx":"27","C:\\project\\weeklyRestaurant-front2\\src\\component\\CookingDetail.jsx":"28","C:\\project\\weeklyRestaurant-front2\\src\\host.js":"29","C:\\project\\weeklyRestaurant-front2\\src\\component\\InventoryItem.jsx":"30","C:\\project\\weeklyRestaurant-front2\\src\\component\\InventoryPopup.jsx":"31","C:\\project\\weeklyRestaurant-front2\\src\\component\\Calendar.jsx":"32","C:\\project\\weeklyRestaurant-front2\\src\\component\\CookingListItem.jsx":"33","C:\\project\\weeklyRestaurant-front2\\src\\component\\CookingFormCustomOption.jsx":"34","C:\\project\\weeklyRestaurant-front2\\src\\component\\CookingListPop.jsx":"35","C:\\project\\weeklyRestaurant-front2\\src\\component\\CookingFormSelectOption.jsx":"36","C:\\project\\weeklyRestaurant-front2\\src\\component\\CookingDetailPop.jsx":"37","C:\\project\\weeklyRestaurant-front2\\src\\component\\CalendarItem.jsx":"38","C:\\project\\weeklyRestaurant-front2\\src\\component\\Loading.jsx":"39"},{"size":309,"mtime":1611825993462,"results":"40","hashOfConfig":"41"},{"size":1715,"mtime":1612518377719,"results":"42","hashOfConfig":"41"},{"size":1731,"mtime":1611303613445,"results":"43","hashOfConfig":"41"},{"size":1725,"mtime":1611303613441,"results":"44","hashOfConfig":"41"},{"size":5583,"mtime":1612534374876,"results":"45","hashOfConfig":"41"},{"size":1627,"mtime":1611408266075,"results":"46","hashOfConfig":"41"},{"size":5004,"mtime":1612519206789,"results":"47","hashOfConfig":"41"},{"size":1756,"mtime":1611303613420,"results":"48","hashOfConfig":"41"},{"size":17010,"mtime":1612534374878,"results":"49","hashOfConfig":"41"},{"size":109,"mtime":1611303654940,"results":"50","hashOfConfig":"41"},{"size":1291,"mtime":1612519318633,"results":"51","hashOfConfig":"41"},{"size":5008,"mtime":1612170122365,"results":"52","hashOfConfig":"41"},{"size":5927,"mtime":1612345839898,"results":"53","hashOfConfig":"41"},{"size":7308,"mtime":1611828429489,"results":"54","hashOfConfig":"41"},{"size":2771,"mtime":1611303613427,"results":"55","hashOfConfig":"41"},{"size":2714,"mtime":1611418328260,"results":"56","hashOfConfig":"41"},{"size":8661,"mtime":1611834965070,"results":"57","hashOfConfig":"41"},{"size":4207,"mtime":1612534374880,"results":"58","hashOfConfig":"41"},{"size":2080,"mtime":1612517703149,"results":"59","hashOfConfig":"41"},{"size":309,"mtime":1611825993462,"results":"60","hashOfConfig":"61"},{"size":2266,"mtime":1613125353614,"results":"62","hashOfConfig":"61"},{"size":1850,"mtime":1613048866758,"results":"63","hashOfConfig":"61"},{"size":1774,"mtime":1612708171418,"results":"64","hashOfConfig":"61"},{"size":5114,"mtime":1613132276470,"results":"65","hashOfConfig":"61"},{"size":1896,"mtime":1613125389783,"results":"66","hashOfConfig":"61"},{"size":1760,"mtime":1613124441903,"results":"67","hashOfConfig":"61"},{"size":17240,"mtime":1613132546077,"results":"68","hashOfConfig":"61"},{"size":5836,"mtime":1613124691776,"results":"69","hashOfConfig":"61"},{"size":173,"mtime":1613132812041,"results":"70","hashOfConfig":"61"},{"size":1291,"mtime":1612519318633,"results":"71","hashOfConfig":"61"},{"size":5516,"mtime":1613132239394,"results":"72","hashOfConfig":"61"},{"size":7590,"mtime":1613125217257,"results":"73","hashOfConfig":"61"},{"size":2820,"mtime":1613125298481,"results":"74","hashOfConfig":"61"},{"size":2080,"mtime":1612517703149,"results":"75","hashOfConfig":"61"},{"size":2876,"mtime":1613125533386,"results":"76","hashOfConfig":"61"},{"size":4139,"mtime":1612539503357,"results":"77","hashOfConfig":"61"},{"size":6002,"mtime":1613124489619,"results":"78","hashOfConfig":"61"},{"size":8004,"mtime":1613125648229,"results":"79","hashOfConfig":"61"},{"size":529,"mtime":1613123889464,"results":"80","hashOfConfig":"61"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"13ujxcx",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"83"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"83"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"83"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"83"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"83"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"83"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"83"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"83"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"83"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"83"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"83"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"83"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"83"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"83"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"1hryy68",{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"138"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"138"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"138"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"138"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"138"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"138"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"138"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"138"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"138"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"138"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"138"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"138"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"138"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},"C:\\project\\weeklyRestaurant2\\front\\src\\index.js",[],["188","189"],"C:\\project\\weeklyRestaurant2\\front\\src\\App.jsx",[],"C:\\project\\weeklyRestaurant2\\front\\src\\component\\Navigation.jsx",["190"],"import React, { useCallback } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from '../images/logo.png';\r\nimport axios from 'axios';\r\nconst host = require(\"../host\");\r\n\r\nconst Navigation = (props) => {\r\n  const {islogin, setIslogin} = props\r\n\r\n  const handleLogout = useCallback(\r\n    () => {\r\n      axios.get(`${host.server}/member/logout`, {\r\n        withCredentials: true\r\n      }).then((result) => {\r\n        setIslogin(false)\r\n      }).catch( error => { console.log('failed', error) })\r\n    }, [setIslogin])\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"layoutWrap\">\r\n        <h1 className=\"logo\">\r\n          <Link to=\"/\">\r\n            <img\r\n              src=\"https://png2.cleanpng.com/sh/4e46ea245115c8278f5307440fa79692/L0KzQYm3U8MxN5Z6iZH0aYP2gLBuTfJqe6V3h59sYXboPbb5jfl1aV5oh9D7YXSwfbL1ifxiNaNqiAZqdYLkfsW0kvV0fJJ6itN3dD3vf7j2TcViapY8TNZsMHWzdYS4Tsc4PGM4TaU8MUW1QoW6UcE6PmE6T6g3cH7q/kisspng-bistro-cafe-ermita-conrad-manila-restaurant-restaurant-logo-5abe74dc0e0e31.7742353315224311960576.png\"\r\n              src={logo}\r\n              alt=\"\"\r\n            />\r\n          </Link>\r\n        </h1>\r\n        <ul>\r\n          <li><Link to=\"/cookingList\">요리 목록</Link></li>\r\n          {\r\n            islogin \r\n            ? \r\n            <>\r\n              <li><Link to=\"/cookingForm\">요리 추가</Link></li>\r\n              <li><Link to=\"/inventory\">재고 현황</Link></li>\r\n            </>\r\n            : null\r\n          }\r\n        </ul>\r\n        {\r\n          islogin\r\n          ? <button className=\"login\" onClick={handleLogout} >로그아웃</button>\r\n          : <Link to=\"/login\" className=\"login\">로그인</Link>\r\n        }\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","C:\\project\\weeklyRestaurant2\\front\\src\\component\\Login.jsx",["191"],"import React, { useCallback, useState } from \"react\";\r\nimport axios from 'axios';\r\nconst host = require(\"../host\");\r\n\r\nconst Login = ({ setIslogin }) => {\r\n\r\n  const [loginValue, setLoginValue] = useState(\r\n    {\r\n      username: 'test',\r\n      password: 'abcd1234',\r\n    }\r\n  );\r\n\r\n  const onLoginInputId = useCallback((e) => {\r\n    e.preventDefault();\r\n    setLoginValue({ ...loginValue, username: e.target.value });\r\n  }, [loginValue])\r\n\r\n  const onLoginInputPassword = useCallback((e) => {\r\n    e.preventDefault();\r\n    setLoginValue({ ...loginValue, password: e.target.value });\r\n    setTimeout(() => { console.log(loginValue) }, 1000)\r\n  }, [loginValue])\r\n\r\n  const handleLogin = useCallback((event) => {\r\n    event.preventDefault();\r\n    axios.post(`${host.server}/member/login`, loginValue, {\r\n      withCredentials: true\r\n    }).then((result) => {\r\n      console.log(result)\r\n      setIslogin(true)\r\n    }).catch(error => { console.log('failed', error) })\r\n  }, [loginValue]);\r\n\r\n  return (\r\n    <form className=\"Login\">\r\n      <div className=\"Login__title\">로그인</div>\r\n      <div className=\"Login__inputWrap\">\r\n        <dl>\r\n          <dt>ID</dt>\r\n          <dd>\r\n            <input type=\"text\" onChange={onLoginInputId} value={loginValue.username} />\r\n          </dd>\r\n        </dl>\r\n        <dl>\r\n          <dt>Password</dt>\r\n          <dd>\r\n            <input type=\"password\" onChange={onLoginInputPassword} value={loginValue.password} />\r\n          </dd>\r\n        </dl>\r\n        <div className=\"Login__buttonWrap\">\r\n          <button className=\"Login__button\" onClick={handleLogin}>\r\n            로그인\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingDetail.jsx",["192","193","194"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport InventoryItem from './InventoryItem'\r\nconst host = require(\"../host\");\r\n\r\nconst CookingDetail = ({ history }) => {\r\n    let { cookingId } = useParams();\r\n\r\n    const [cookingDetail, setCookingDetail] = useState()\r\n\r\n    useEffect(() => {\r\n        handleDetail()\r\n    }, [])\r\n\r\n    const handleDetail = useCallback(() => {\r\n        axios.get(`${host.server}/recipe/${cookingId}`, {\r\n            withCredentials: true\r\n        }).then((result) => {\r\n            setCookingDetail(result.data.data);\r\n        }).catch(error => { console.log('failed', error) });\r\n    }, []);\r\n\r\n    const onDeleteRecipe = useCallback((e) => {\r\n        e.preventDefault();\r\n        axios.delete(`${host.server}/recipe`, {\r\n            data: { id: `${cookingId}` },\r\n            withCredentials: true\r\n            // id: `${cookingId}`\r\n        }\r\n            // {\r\n            //     withCredentials: true\r\n            // }\r\n        ).then((result) => {\r\n            console.log('삭제완료', cookingId, result)\r\n            history.push('/cookingList');\r\n        }).catch(error => { console.log('failed', error) });\r\n    }, [cookingId])\r\n\r\n    return (\r\n        <>\r\n            {cookingDetail && (\r\n                <div className=\"LineBox\">\r\n                    <h2>요리 상세</h2>\r\n                    <div className=\"CookingDetail\">\r\n                        <div className=\"CookingDetail__top\">\r\n                            <div className=\"CookingDetail__desc\">\r\n                                <div className=\"CookingDetail__title\">{cookingDetail.name}</div>\r\n                                <div className=\"CookingDetail__imgUrl\">\r\n                                    <span>이미지 URL</span>\r\n                                    <p>{cookingDetail.img}</p>\r\n                                </div>\r\n                                <div className=\"CookingDetail__buttonWrap\">\r\n                                    <Link to={`/cookingForm/${cookingId}`} className=\"CookingDetail__button CookingDetail__button--edit\">수정하기</Link>\r\n                                    <button className=\"CookingDetail__button CookingDetail__button--delete\" onClick={onDeleteRecipe}>삭제</button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"CookingDetail__thumb\">\r\n                                <img src={cookingDetail.img} alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"CookingDetail__ingredient\">\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">육류</dt>\r\n                                {\r\n                                    cookingDetail.contents.meat.contents ? (\r\n                                        cookingDetail.contents.meat.contents.map((item, i) => {\r\n                                            return (\r\n                                                <InventoryItem ingredient={item} key={i} />\r\n                                            )\r\n                                        })\r\n                                    ) : null\r\n                                }\r\n                            </dl>\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">어류</dt>\r\n                                {\r\n                                    cookingDetail.contents.fish.contents ? (\r\n                                        cookingDetail.contents.fish.contents.map((item, i) => {\r\n                                            return (\r\n                                                <InventoryItem ingredient={item} key={i} />\r\n                                            )\r\n                                        })\r\n                                    ) : null\r\n                                }\r\n                            </dl>\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">부재료</dt>\r\n                                {\r\n                                    cookingDetail.contents.misc.contents ? (\r\n                                        cookingDetail.contents.misc.contents.map((item, i) => {\r\n                                            return (\r\n                                                <InventoryItem ingredient={item} key={i} />\r\n                                            )\r\n                                        })\r\n                                    ) : null\r\n                                }\r\n                            </dl>\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">양념(소스)</dt>\r\n                                {\r\n                                    cookingDetail.contents.sauce.contents ? (\r\n                                        cookingDetail.contents.sauce.contents.map((item, i) => {\r\n                                            return (\r\n                                                <InventoryItem ingredient={item} key={i} />\r\n                                            )\r\n                                        })\r\n                                    ) : null\r\n                                }\r\n                            </dl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CookingDetail;\r\n","C:\\project\\weeklyRestaurant2\\front\\src\\component\\Main.jsx",["195"],"import React, { useState } from 'react';\r\nimport Calendar from './Calendar';\r\nimport CookingDetailPop from './CookingDetailPop';\r\nimport CookingListPop from './CookingListPop';\r\n\r\nconst Main = (props) => {\r\n  \r\n  const { islogin } = props;\r\n  const [ isDetailPopup, setIsDetailPopup ] = useState(false);\r\n  const [ isListPopup, setIsListPopup ] = useState(false);\r\n  const [ popupCookingId, setPopupCookingId ] = useState();\r\n  const [ calendarSelectData, setCalendarSelectData ] = useState();\r\n  const [calendarData, setCalendarData] = useState();\r\n\r\n  return (\r\n    <>\r\n      <Calendar\r\n        setIsDetailPopup={setIsDetailPopup}\r\n        setIsListPopup={setIsListPopup}\r\n        islogin={islogin}\r\n        calendarSelectData={calendarSelectData}\r\n        setPopupCookingId={setPopupCookingId}\r\n        calendarData={calendarData}\r\n        setCalendarData={setCalendarData}\r\n        calendarSelectData={calendarSelectData}\r\n        setCalendarSelectData={setCalendarSelectData}\r\n      />\r\n      {\r\n        isDetailPopup &&\r\n          <CookingDetailPop\r\n            setIsDetailPopup={setIsDetailPopup}\r\n            popupCookingId={popupCookingId}\r\n          />\r\n      }\r\n      {\r\n        isListPopup &&\r\n          <CookingListPop\r\n            setIsListPopup={setIsListPopup}\r\n            setIsDetailPopup={setIsDetailPopup}\r\n            setPopupCookingId={setPopupCookingId}\r\n            calendarData={calendarData}\r\n            setCalendarData={setCalendarData}\r\n            popupCookingId={popupCookingId}\r\n            calendarSelectData={calendarSelectData}\r\n          />\r\n      }\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Main;","C:\\project\\weeklyRestaurant2\\front\\src\\component\\Inventory.jsx",[],"C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingList.jsx",["196"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from 'axios';\r\nimport CookingListItem from \"./CookingListItem\";\r\nconst host = require(\"../host\");\r\n\r\nconst CookingList = () => {\r\n\r\n  const [cookingList, setCookingList] = useState([])\r\n\r\n  useEffect(()=> {\r\n    handleList()\r\n  }, [])\r\n\r\n  const handleList = useCallback((event) => {\r\n    if(event) {\r\n      let children = event.target.parentElement.children;\r\n      for(let i = 0; i < children.length; i++) {\r\n        children[i].classList.remove('CookingList__tabItem--active')\r\n      }\r\n      event.target.classList.add('CookingList__tabItem--active')\r\n    } \r\n\r\n    axios.get(`${host.server}/recipe/list?style=${event ? event.target.attributes.nation.value : `kor`}`, {\r\n      withCredentials: true\r\n    }).then((result) => {\r\n      setCookingList(result.data.data);\r\n    }).catch( error => { console.log('failed', error) });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"LineBox\">\r\n      <h2>요리 목록</h2>\r\n      <div className=\"CookingList\">\r\n        <ul className=\"CookingList__tab\">\r\n          <li className=\"CookingList__tabItem CookingList__tabItem--active\" onClick={handleList} nation={`kor`}>\r\n            한식\r\n          </li>\r\n          <li className=\"CookingList__tabItem\" onClick={handleList} nation={`chn`}>중식</li>\r\n          <li className=\"CookingList__tabItem\" onClick={handleList} nation={`wes`}>양식</li>\r\n        </ul>\r\n        <ul className=\"CookingList__dishList\">\r\n          {\r\n            cookingList.map((item) => {\r\n              return (\r\n                <CookingListItem cookingList={item} key={item.id} />\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CookingList;\r\n","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingForm.jsx",["197","198","199","200","201","202"],"import React, { useCallback, useState, useEffect, useRef } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport CookingFormSelectOption from './CookingFormSelectOption';\r\nimport CookingFormCustomOption from './CookingFormCustomOption';\r\n\r\nconst host = require(\"../host\");\r\n\r\nconst CookingForm = ({history}) => {\r\n  // params로 수정할 요리의 id를 받아온다.\r\n  let { cookingId } = useParams();\r\n  console.log('cookingId' , cookingId)\r\n\r\n  useEffect(() => {\r\n    axios.get(`${host.server}/recipe/new`, {\r\n      withCredentials: true\r\n    }).then((result) => {\r\n      setBaseOption(result.data.data)\r\n    }).catch((error)=>{console.log('failed', error)})\r\n  }, [])\r\n\r\n  // 수정시 레시피 get\r\n  useEffect(() => {\r\n    if(cookingId){\r\n      axios.get(`${host.server}/recipe/${cookingId}`, {\r\n        withCredentials: true\r\n      }).then((result) => {\r\n        console.log(result.data.data, '요리수정 레시피 get 요청')\r\n        setCookingForm(result.data.data)\r\n\r\n        const varStyle = result.data.data.style;\r\n        if(varStyle === 'KOR'){\r\n          selectStyle.current.selectedIndex = 1\r\n        }else if(varStyle === 'CHN'){\r\n          selectStyle.current.selectedIndex = 2\r\n        }else if(varStyle === 'WES'){\r\n          selectStyle.current.selectedIndex = 3\r\n        }\r\n\r\n        const category = ['meat', 'fish', 'misc', 'sauce'];\r\n        let meatArr = [], fishArr = [], miscArr = [], sauceArr = [];\r\n        const arr = [meatArr, fishArr, miscArr, sauceArr];\r\n        category.map((item, index)=>{\r\n          if(result.data.data.contents[item].contents){\r\n            for(let i = 0; i < result.data.data.contents[item].contents.length; i++){\r\n              arr[index].push({selfInput: false})\r\n            }\r\n          }\r\n        })\r\n\r\n        setCategoryOptionArr({\r\n          meat: meatArr,\r\n          fish: fishArr,\r\n          misc: miscArr,\r\n          sauce: sauceArr,\r\n        })\r\n\r\n      }).catch((error)=>{console.log('failed', error)})\r\n    }\r\n  }, [])\r\n\r\n  const [cookingForm, setCookingForm] = useState({\r\n    id: null,\r\n    name: null,\r\n    style: null,\r\n    img: null,\r\n    contents: {\r\n      meat: {\r\n        id: null,\r\n        name: null,\r\n        contents: [],\r\n      },\r\n      fish: {\r\n        id: null,\r\n        name: null,\r\n        contents: [],\r\n      },\r\n      misc: {\r\n        id: null,\r\n        name: null,\r\n        contents: [],\r\n      },\r\n      sauce: {\r\n        id: null,\r\n        name: null,\r\n        contents: [],\r\n      }\r\n    }\r\n  });\r\n\r\n  const [baseOption, setBaseOption] = useState({\r\n    name: null,\r\n    amount: null,\r\n    unit: null,\r\n  });\r\n\r\n  const [handleValue, setHandleValue] = useState({\r\n    targetCateogry: null,\r\n    contents: {\r\n      name: null,\r\n      amount: null,\r\n      unit: null,\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(handleValue.contents, 'handleValue change', handleValue.targetCategory, ': target' )\r\n    if(handleValue.targetCategory){\r\n      setCookingForm({\r\n        ...cookingForm,\r\n        contents: {\r\n          ...cookingForm.contents,\r\n          [handleValue.targetCategory]: {\r\n            id: null,\r\n            name: null,\r\n            contents: handleValue.contents\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }, [handleValue])\r\n\r\n  const [categoryOptionArr, setCategoryOptionArr] = useState({\r\n    meat: [],\r\n    fish: [],\r\n    misc: [],\r\n    sauce: [],\r\n  });\r\n\r\n  const onCookingCreate = useCallback((e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(cookingForm, '최종 전송 폼')\r\n\r\n    axios.post(`${host.server}/recipe`, cookingForm, {\r\n      withCredentials: true\r\n    }).then((result) => {\r\n      alert('요리 추가 성공.')\r\n      setHandleValue({\r\n        targetCateogry: null,\r\n        contents: {\r\n          name: null,\r\n          amount: null,\r\n          unit: null,\r\n        }\r\n      })\r\n      setCookingForm({\r\n        id: null,\r\n        name: '',\r\n        style: null,\r\n        img: '',\r\n        contents: {\r\n          meat: {\r\n            id: null,\r\n            name: null,\r\n            contents: [],\r\n          },\r\n          fish: {\r\n            id: null,\r\n            name: null,\r\n            contents: [],\r\n          },\r\n          misc: {\r\n            id: null,\r\n            name: null,\r\n            contents: [],\r\n          },\r\n          sauce: {\r\n            id: null,\r\n            name: null,\r\n            contents: [],\r\n          }\r\n        }\r\n      })\r\n      setCategoryOptionArr({\r\n        meat: [],\r\n        fish: [],\r\n        misc: [],\r\n        sauce: [],\r\n      })\r\n\r\n      // 카테고리 style 옵션 초기화\r\n      selectStyle.current.selectedIndex = 0;\r\n\r\n    }).catch( error => { console.log('failed', error) });\r\n\r\n  }, [cookingForm])\r\n\r\n  const onChangeInput = useCallback((e)=>{\r\n    setCookingForm({\r\n      ...cookingForm,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  })\r\n\r\n  const selectStyle = useRef(null);\r\n\r\n  const onCookingEdit = useCallback((e)=>{\r\n    e.preventDefault();\r\n    console.log('전달 레시피', cookingForm)\r\n\r\n    axios.put(`${host.server}/recipe`, cookingForm, {\r\n      withCredentials: true\r\n    }).then((result) => {\r\n      console.log('요리 수정완료', result)\r\n      history.push(`/cookingList/${cookingId}`);\r\n    }).catch( error => { console.log('failed', error) });\r\n  }, [cookingForm])\r\n\r\n  useEffect(() => {\r\n    console.log(cookingForm, 'cookingForm change!!')\r\n  }, [cookingForm])\r\n\r\n  return (\r\n    <div className=\"LineBox\">\r\n      {\r\n        cookingId ? <h2>요리 수정</h2> : <h2>요리 추가</h2>\r\n      }\r\n      <form className=\"CookingForm\">\r\n        <ul className=\"CookingForm__top\">\r\n          <li>\r\n            <dl>\r\n              <dt>\r\n                <label htmlFor=\"\">요리명</label>\r\n              </dt>\r\n              <dd>\r\n                <input type=\"text\" name=\"name\" onChange={onChangeInput} value={cookingForm.name} />\r\n              </dd>\r\n            </dl>\r\n          </li>\r\n          <li className=\"halfType\">\r\n            <dl>\r\n              <dt>\r\n                <label htmlFor=\"\">요리사진 URL</label>\r\n              </dt>\r\n              <dd>\r\n                <input type=\"text\" name=\"img\" onChange={onChangeInput} value={cookingForm.img} />\r\n              </dd>\r\n            </dl>\r\n            <dl>\r\n              <dt>\r\n                <label htmlFor=\"\">요리 카테고리</label>\r\n              </dt>\r\n              <dd>\r\n                <select name=\"style\" id=\"\" onChange={onChangeInput} ref={selectStyle}>\r\n                  <option value=\"none\" selected disabled hidden>카테고리 선택</option>\r\n                  <option value=\"KOR\">한식</option>\r\n                  <option value=\"CHN\">중식</option>\r\n                  <option value=\"WES\">양식</option>\r\n                </select>\r\n              </dd>\r\n            </dl>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"CookingForm__category\">\r\n          <li>\r\n            <dl>\r\n              <dt>\r\n                육류\r\n              </dt>\r\n              {\r\n                baseOption\r\n                ? \r\n                categoryOptionArr.meat.map((item, index)=> {\r\n                  return (\r\n                    item.selfInput\r\n                    ? <CookingFormCustomOption\r\n                        baseOption={baseOption.meat} \r\n                        group={'meat'} \r\n                        categoryOptionArr={categoryOptionArr}\r\n                        setCategoryOptionArr={setCategoryOptionArr} \r\n                        cookingForm={cookingForm}\r\n                        setCookingForm={setCookingForm}\r\n                        index={index}\r\n                        key={index} \r\n                        handleValue={handleValue} \r\n                        setHandleValue={setHandleValue}\r\n                      />\r\n                    : <CookingFormSelectOption \r\n                        baseOption={baseOption.meat} \r\n                        group={'meat'} \r\n                        categoryOptionArr={categoryOptionArr} \r\n                        setCategoryOptionArr={setCategoryOptionArr} \r\n                        cookingForm={cookingForm}\r\n                        setCookingForm={setCookingForm}\r\n                        index={index}\r\n                        key={index} \r\n                        handleValue={handleValue} \r\n                        setHandleValue={setHandleValue}\r\n                      />\r\n                  )\r\n                })\r\n                : null\r\n              }\r\n            </dl>\r\n            <CookingMoreOption \r\n              baseOption={baseOption.meat} \r\n              setHandleValue={setHandleValue}\r\n              setCookingForm={setCookingForm} \r\n              cookingForm={cookingForm} \r\n              group={'meat'} \r\n              categoryOptionArr={categoryOptionArr}  \r\n              setCategoryOptionArr={setCategoryOptionArr} \r\n            />\r\n          </li>\r\n          <li>\r\n            <dl>\r\n              <dt>\r\n                어류\r\n              </dt>\r\n              {\r\n                baseOption\r\n                ? \r\n                categoryOptionArr.fish.map((item, index)=> {\r\n                  return (\r\n                    item.selfInput\r\n                    ? <CookingFormCustomOption\r\n                        baseOption={baseOption.fish} \r\n                        group={'fish'} \r\n                        categoryOptionArr={categoryOptionArr}\r\n                        setCategoryOptionArr={setCategoryOptionArr} \r\n                        cookingForm={cookingForm}\r\n                        setCookingForm={setCookingForm}\r\n                        index={index}\r\n                        key={index} \r\n                        handleValue={handleValue} \r\n                        setHandleValue={setHandleValue}\r\n                      />\r\n                    : <CookingFormSelectOption \r\n                        baseOption={baseOption.fish} \r\n                        group={'fish'} \r\n                        categoryOptionArr={categoryOptionArr} \r\n                        setCategoryOptionArr={setCategoryOptionArr} \r\n                        cookingForm={cookingForm}\r\n                        setCookingForm={setCookingForm}\r\n                        index={index}\r\n                        key={index} \r\n                        handleValue={handleValue} \r\n                        setHandleValue={setHandleValue}\r\n                      />\r\n                  )\r\n                })\r\n                : null\r\n              }\r\n            </dl>\r\n            <CookingMoreOption \r\n              baseOption={baseOption.fish} \r\n              setHandleValue={setHandleValue}\r\n              setCookingForm={setCookingForm} \r\n              cookingForm={cookingForm} \r\n              group={'fish'} \r\n              categoryOptionArr={categoryOptionArr}  \r\n              setCategoryOptionArr={setCategoryOptionArr} \r\n            />\r\n          </li>\r\n          <li>\r\n            <dl>\r\n              <dt>\r\n                부재료\r\n              </dt>\r\n              {\r\n                baseOption\r\n                ? \r\n                categoryOptionArr.misc.map((item, index)=> {\r\n                  return (\r\n                    item.selfInput\r\n                    ? <CookingFormCustomOption\r\n                        baseOption={baseOption.misc} \r\n                        group={'misc'} \r\n                        categoryOptionArr={categoryOptionArr}\r\n                        setCategoryOptionArr={setCategoryOptionArr} \r\n                        cookingForm={cookingForm}\r\n                        setCookingForm={setCookingForm}\r\n                        index={index}\r\n                        key={index} \r\n                        handleValue={handleValue} \r\n                        setHandleValue={setHandleValue}\r\n                      />\r\n                    : <CookingFormSelectOption \r\n                        baseOption={baseOption.misc} \r\n                        group={'misc'} \r\n                        categoryOptionArr={categoryOptionArr} \r\n                        setCategoryOptionArr={setCategoryOptionArr} \r\n                        cookingForm={cookingForm}\r\n                        setCookingForm={setCookingForm}\r\n                        index={index}\r\n                        key={index} \r\n                        handleValue={handleValue} \r\n                        setHandleValue={setHandleValue}\r\n                      />\r\n                  )\r\n                })\r\n                : null\r\n              }\r\n            </dl>\r\n            <CookingMoreOption \r\n              baseOption={baseOption.misc} \r\n              setHandleValue={setHandleValue}\r\n              setCookingForm={setCookingForm} \r\n              cookingForm={cookingForm} \r\n              group={'misc'} \r\n              categoryOptionArr={categoryOptionArr}  \r\n              setCategoryOptionArr={setCategoryOptionArr} \r\n            />\r\n          </li>\r\n          <li>\r\n            <dl>\r\n              <dt>\r\n                소스(양념)\r\n              </dt>\r\n              {\r\n                baseOption\r\n                ? \r\n                categoryOptionArr.sauce.map((item, index)=> {\r\n                  return (\r\n                    item.selfInput\r\n                    ? <CookingFormCustomOption\r\n                        baseOption={baseOption.sauce} \r\n                        group={'sauce'} \r\n                        categoryOptionArr={categoryOptionArr}\r\n                        setCategoryOptionArr={setCategoryOptionArr} \r\n                        cookingForm={cookingForm}\r\n                        setCookingForm={setCookingForm}\r\n                        index={index}\r\n                        key={index} \r\n                        handleValue={handleValue} \r\n                        setHandleValue={setHandleValue}\r\n                      />\r\n                    : <CookingFormSelectOption \r\n                        baseOption={baseOption.sauce} \r\n                        group={'sauce'} \r\n                        categoryOptionArr={categoryOptionArr} \r\n                        setCategoryOptionArr={setCategoryOptionArr} \r\n                        cookingForm={cookingForm}\r\n                        setCookingForm={setCookingForm}\r\n                        index={index}\r\n                        key={index} \r\n                        handleValue={handleValue} \r\n                        setHandleValue={setHandleValue}\r\n                      />\r\n                  )\r\n                })\r\n                : null\r\n              }\r\n            </dl>\r\n            <CookingMoreOption \r\n              baseOption={baseOption.sauce} \r\n              setHandleValue={setHandleValue}\r\n              setCookingForm={setCookingForm} \r\n              cookingForm={cookingForm} \r\n              group={'sauce'} \r\n              categoryOptionArr={categoryOptionArr}  \r\n              setCategoryOptionArr={setCategoryOptionArr} \r\n            />\r\n          </li>\r\n        </ul>\r\n        <div className=\"CookingForm__buttonWrap\">\r\n          {\r\n            cookingId\r\n            ? <button type=\"submit\" className=\"CookingForm__button CookingForm__button--edit\" onClick={onCookingEdit}>요리수정</button>\r\n            : <button type=\"submit\" className=\"CookingForm__button CookingForm__button--submit\" onClick={onCookingCreate}>요리추가</button>\r\n          }\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst CookingMoreOption = ({setHandleValue,cookingForm,setCookingForm,setCategoryOptionArr, categoryOptionArr, group, baseOption}) => {\r\n  const handleMore = useCallback((e)=>{\r\n    e.preventDefault()\r\n\r\n    // 직접입력, 선택입력 옵션설정\r\n    // 기본값 선택입력 추가\r\n    const optionArr = {...categoryOptionArr};\r\n    optionArr[group].push({selfInput : false})\r\n    setCategoryOptionArr(optionArr);\r\n\r\n    // handlevalue 컨트롤\r\n    // 기본값 선택입력 추가\r\n    \r\n    let copyArr;\r\n    if(cookingForm.contents[group].contents){\r\n      copyArr = Array.from(cookingForm.contents[group].contents)\r\n      copyArr.push({\r\n        name: Object.keys(baseOption[0])[0],\r\n        amount: 0,\r\n        unit: baseOption[0][Object.keys(baseOption[0])],\r\n      })\r\n    }else{\r\n      copyArr = [{\r\n        name: Object.keys(baseOption[0])[0],\r\n        amount: 0,\r\n        unit: baseOption[0][Object.keys(baseOption[0])],\r\n      }]\r\n    }\r\n    console.log(copyArr, `${group}기본 생성값 추가!`)\r\n\r\n    setHandleValue({\r\n      targetCategory: group,\r\n      contents: copyArr\r\n    })\r\n  }, [categoryOptionArr, group, cookingForm, baseOption])\r\n\r\n  return(\r\n    <div className=\"CookingForm__more\">\r\n      <button className=\"CookingForm__optionButton CookingForm__optionButton--add\" onClick={handleMore}>+ 추가</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CookingForm;","C:\\project\\weeklyRestaurant2\\front\\src\\host.js",[],"C:\\project\\weeklyRestaurant2\\front\\src\\component\\InventoryItem.jsx",["203"],"import React, {useCallback} from \"react\";\r\n\r\nconst InventoryItem = (props) => {\r\n  const {name, amount, unit} = props.ingredient;\r\n  const {setInventoryPopupInfo, inventoryPopupInfo, category, title, index} = props;\r\n\r\n  const onModifyAction = useCallback(() =>{\r\n    setInventoryPopupInfo({\r\n      display: true,\r\n      title: title,\r\n      category: category,\r\n      modifyMode: true,\r\n      modifyModeName: name,\r\n      modifyModeAmount: amount,\r\n      modifyModeUnit: unit,\r\n      listIndex: index,\r\n    })\r\n  }, [setInventoryPopupInfo, category, title, name, unit, index, amount])\r\n\r\n  return (\r\n    <div className=\"Ingredient\">\r\n      \r\n      {\r\n        inventoryPopupInfo\r\n        ? (\r\n          <a onClick={onModifyAction}>\r\n            <div className=\"Ingredient__title\">{name}</div>\r\n            <div className=\"Ingredient__count\">{amount}</div>\r\n            <div className=\"Ingredient__unit\">{unit}</div>\r\n          </a>\r\n        ) \r\n        : (\r\n          <div className=\"Ingredient__wrap\">\r\n            <div className=\"Ingredient__title\">{name}</div>\r\n            <div className=\"Ingredient__count\">{amount}</div>\r\n            <div className=\"Ingredient__unit\">{unit}</div>\r\n          </div>\r\n        )\r\n      }\r\n        \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventoryItem;\r\n","C:\\project\\weeklyRestaurant2\\front\\src\\component\\InventoryPopup.jsx",["204","205","206"],"import React, {useCallback, useState} from 'react';\r\nimport axios from 'axios';\r\nconst host = require(\"../host\");\r\n\r\nconst InventoryPopup = (props) => {\r\n    const {inventoryPopupInfo, setInventoryPopupInfo, ingredient, setIngredient} = props;\r\n    const [inventoryInputValue, setInventoryInputValue] = useState({\r\n        name: null,\r\n        amount: null,\r\n        unit: null\r\n    });\r\n    \r\n    const handleCloseInventoryPopup = useCallback(\r\n        () => {\r\n            setInventoryPopupInfo({\r\n                ...inventoryPopupInfo, \r\n                display: false,\r\n                modifyMode: false,\r\n                modifyModeName: null,\r\n                modifyModeAmount: null,\r\n                modifyModeUnit: null,\r\n                listIndex: null,\r\n            })\r\n            setInventoryInputValue({\r\n                name: null,\r\n                amount: null,\r\n                unit: null\r\n            })\r\n        }\r\n    )\r\n\r\n    const handleAddInventory = useCallback(()=>{\r\n        const copyIngredient = {...ingredient};\r\n\r\n        if(inventoryPopupInfo.modifyMode){\r\n            copyIngredient[inventoryPopupInfo.category][inventoryPopupInfo.listIndex] = inventoryInputValue;\r\n        }else{\r\n            copyIngredient[inventoryPopupInfo.category].push(inventoryInputValue);\r\n        }\r\n\r\n        console.log(copyIngredient, 'copyIngredient')\r\n\r\n        axios.put(`${host.server}/inventory`, copyIngredient,{\r\n            withCredentials: true\r\n        }).then((result) => {\r\n            console.log(result);\r\n            setIngredient(copyIngredient);\r\n            setInventoryPopupInfo({\r\n                ...inventoryPopupInfo, \r\n                display: false,\r\n                modifyMode: false,\r\n                modifyModeName: null,\r\n                modifyModeAmount: null,\r\n                modifyModeUnit: null,\r\n                listIndex: null,\r\n            })\r\n            setInventoryInputValue({\r\n                name: null,\r\n                amount: null,\r\n                unit: null\r\n            })\r\n        }).catch(error => { console.log('failed', error) });\r\n        \r\n    })\r\n\r\n    const handleAddInput = useCallback((e)=>{\r\n        if(inventoryPopupInfo.modifyMode){\r\n            setInventoryInputValue({\r\n                name: inventoryPopupInfo.modifyModeName,\r\n                amount: e.currentTarget.value,\r\n                unit: inventoryPopupInfo.modifyModeUnit,\r\n            })\r\n        } else {\r\n            setInventoryInputValue({...inventoryInputValue, [e.target.name]: e.currentTarget.value})\r\n        }\r\n    }, [inventoryInputValue])\r\n\r\n    return (\r\n        <div className=\"InventoryPopup\">\r\n            <div className=\"InventoryPopup__title\">\r\n                {inventoryPopupInfo.title} 재고 추가\r\n                <button className=\"InventoryPopup__close\" onClick={handleCloseInventoryPopup}><i className=\"fas fa-times\"></i><i className=\"ir\">닫기</i></button>\r\n            </div>\r\n            {\r\n                inventoryPopupInfo.modifyMode \r\n                ? (\r\n                    <div className=\"InventoryPopup__wrap\">\r\n                        <div className=\"InventoryPopup__name\">\r\n                            <input type=\"text\" placeholder=\"이름\" name=\"name\" value={inventoryPopupInfo.modifyModeName} disabled />\r\n                        </div>\r\n                        <div className=\"InventoryPopup__amount\">\r\n                            <input type=\"text\" placeholder={inventoryPopupInfo.modifyModeAmount} name=\"amount\" onChange={handleAddInput} value={inventoryInputValue.amount} />\r\n                        </div>\r\n                        <div className=\"InventoryPopup__unit\">\r\n                            <input type=\"text\" placeholder=\"단위\" name=\"unit\" value={inventoryPopupInfo.modifyModeUnit} disabled />\r\n                        </div>\r\n                    </div>\r\n                )\r\n                : (\r\n                    <div className=\"InventoryPopup__wrap\">\r\n                        <div className=\"InventoryPopup__name\">\r\n                            <input type=\"text\" placeholder=\"이름\" name=\"name\" onChange={handleAddInput} value={inventoryInputValue.name} />\r\n                        </div>\r\n                        <div className=\"InventoryPopup__amount\">\r\n                            <input type=\"text\" placeholder=\"수량\" name=\"amount\" onChange={handleAddInput} value={inventoryInputValue.amount} />\r\n                        </div>\r\n                        <div className=\"InventoryPopup__unit\">\r\n                            <input type=\"text\" placeholder=\"단위\" name=\"unit\" onChange={handleAddInput} value={inventoryInputValue.unit} />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            <div className=\"InventoryPopup__buttonArea\">\r\n                <button className=\"InventoryPopup__button InventoryPopup__button--add\" onClick={handleAddInventory}>추가하기</button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default InventoryPopup;","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingDetailPop.jsx",["207","208"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport InventoryItem from './InventoryItem'\r\nconst host = require(\"../host\");\r\n\r\n\r\nconst CookingDetailPop = ({ setIsDetailPopup, popupCookingId = 1134 }) => {\r\n    const handleCloseDetail = useCallback(\r\n        () => {\r\n            setIsDetailPopup(false)\r\n        })\r\n\r\n    const [cookingDetail, setCookingDetail] = useState()\r\n\r\n    console.log(cookingDetail, popupCookingId)\r\n\r\n    useEffect(() => {\r\n        handleDetail()\r\n    }, [])\r\n\r\n    const handleDetail = useCallback(() => {\r\n        axios.get(`${host.server}/recipe/${popupCookingId}`, {\r\n            withCredentials: true\r\n        }).then((result) => {\r\n            console.log(result.data)\r\n            setCookingDetail(result.data.data);\r\n        }).catch(error => { console.log('failed', error) });\r\n    }, [popupCookingId]);\r\n\r\n    return (\r\n        <>\r\n            {cookingDetail ? (\r\n\r\n                <article className=\"LayoutPopup\">\r\n                    <div className=\"LayoutPopup__header\">\r\n                        <h2 className=\"LayoutPopup__title\">상세보기 {popupCookingId}</h2>\r\n                        <button className=\"LayoutPopup__close\" onClick={handleCloseDetail}><i className=\"fas fa-times\"></i><i className=\"ir\">닫기</i></button>\r\n                    </div>\r\n                    <div className=\"CookingDetail\">\r\n                        <div className=\"CookingDetail__top\">\r\n                            <div className=\"CookingDetail__desc\">\r\n                                <div className=\"CookingDetail__title\">{cookingDetail.name}</div>\r\n                                <div className=\"CookingDetail__imgUrl\">\r\n                                    <span>이미지 URL</span>\r\n                                    <p>{cookingDetail.img}</p>\r\n                                </div>\r\n                                {/* <div className=\"CookingDetail__buttonWrap\">\r\n                                    <button className=\"CookingDetail__button CookingDetail__button--edit\">수정하기</button>\r\n                                    <button className=\"CookingDetail__button CookingDetail__button--delete\">삭제</button>\r\n                                </div> */}\r\n                            </div>\r\n                            <div className=\"CookingDetail__thumb\">\r\n                                <img src={cookingDetail.img} alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"CookingDetail__ingredient\">\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">육류</dt>\r\n                                <dd>\r\n                                    {\r\n                                        cookingDetail.contents.meat.contents ? (\r\n                                            cookingDetail.contents.meat.contents.map((item, i) => {\r\n                                                return (\r\n                                                    <InventoryItem ingredient={item} key={i} />\r\n                                                )\r\n                                            })\r\n                                        ) : null\r\n                                    }\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">어류</dt>\r\n                                <dd>\r\n                                    {\r\n                                        cookingDetail.contents.fish.contents ? (\r\n                                            cookingDetail.contents.fish.contents.map((item, i) => {\r\n                                                return (\r\n                                                    <InventoryItem ingredient={item} key={i} />\r\n                                                )\r\n                                            })\r\n                                        ) : null\r\n                                    }\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">부재료</dt>\r\n                                <dd>\r\n                                    {\r\n                                        cookingDetail.contents.misc.contents ? (\r\n                                            cookingDetail.contents.misc.contents.map((item, i) => {\r\n                                                return (\r\n                                                    <InventoryItem ingredient={item} key={i} />\r\n                                                )\r\n                                            })\r\n                                        ) : null\r\n                                    }\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">양념(소스)</dt>\r\n                                <dd>\r\n                                    {\r\n                                        cookingDetail.contents.sauce.contents ? (\r\n                                            cookingDetail.contents.sauce.contents.map((item, i) => {\r\n                                                return (\r\n                                                    <InventoryItem ingredient={item} key={i} />\r\n                                                )\r\n                                            })\r\n                                        ) : null\r\n                                    }\r\n                                </dd>\r\n                            </dl>\r\n                        </div>\r\n                    </div>\r\n                </article>\r\n\r\n            ) : null}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CookingDetailPop;","C:\\project\\weeklyRestaurant2\\front\\src\\component\\Calendar.jsx",["209","210","211","212","213","214","215"],"import React, { useCallback, useState, useEffect } from \"react\";\r\nimport CalendarItem from './CalendarItem'\r\nimport axios from 'axios';\r\nconst host = require(\"../host\");\r\n\r\nconst Calendar = (props) => {\r\n\r\n  const date = new Date();\r\n  const getWeek = useCallback((dowOffset) => {\r\n    dowOffset = typeof (dowOffset) == 'number' ? dowOffset : 0;\r\n    var newdate = new Date();\r\n    var newYear = new Date(newdate.getFullYear(), 0, 1);\r\n    var day = newYear.getDay() - dowOffset;\r\n    day = (day >= 0 ? day : day + 7);\r\n    var daynum = Math.floor((newdate.getTime() - newYear.getTime() -\r\n      (newdate.getTimezoneOffset() - newYear.getTimezoneOffset()) * 60000) / 86400000) + 1;\r\n    var weeknum;\r\n    if (day < 4) {\r\n      weeknum = Math.floor((daynum + day - 1) / 7) + 1;\r\n      if (weeknum > 52) {\r\n        let nYear = new Date(newdate.getFullYear() + 1, 0, 1);\r\n        let nday = nYear.getDay() - dowOffset;\r\n        nday = nday >= 0 ? nday : nday + 7;\r\n        weeknum = nday < 4 ? 1 : 53;\r\n      }\r\n    }\r\n    else {\r\n      weeknum = Math.floor((daynum + day - 1) / 7);\r\n    }\r\n    return weeknum;\r\n  });\r\n\r\n  const getFirstDay = (year) => {\r\n    return new Date(year, 0, 1).getDay() - 1;\r\n  };\r\n\r\n  const todayYear = date.getFullYear(); // 년\r\n  const todayMonth = date.getMonth() + 1; // 월\r\n  const todayDate = date.getDate(); // 날짜\r\n  const todayDay = date.getDay(); // 요일\r\n  const todayWeek = getWeek(getFirstDay(todayYear)); // 몇주차\r\n  const lastDate = new Date(todayYear, todayMonth, 0).getDate();\r\n\r\n  const getLastDay = function (year, month) {\r\n    return new Date(year, month, 0).getDay();\r\n  };\r\n\r\n  const getLastDate = function (year, month) {\r\n    return new Date(year, month, 0).getDate();\r\n  };\r\n\r\n  const getPrevLastDate = function (year, month) {\r\n    if (month === 1) {\r\n      return new Date(year - 1, 12, 0).getDate();\r\n    } else {\r\n      return new Date(year, month - 1, 0).getDate();\r\n    }\r\n  }\r\n\r\n  const {calendarData, setCalendarData, calendarSelectData, setIsDetailPopup, setIsListPopup, islogin, setPopupCookingId, setCalendarSelectData } = props;\r\n  const [calendarDateInfo, setCalendarDateInfo] = useState({\r\n    setYear: todayYear,\r\n    setMonth: todayMonth,\r\n    setDay: todayDay,\r\n    setDate: todayDate,\r\n    setWeek: todayWeek,\r\n  });\r\n  const [calendarDateArr, setCalendarDataArr] = useState([]);\r\n\r\n  const calendarCalc = useCallback((year, month, day, date) => {\r\n    let calendarArr = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      if (day > i) {\r\n        if (date - day + i <= 0) {\r\n          calendarArr.unshift(getPrevLastDate(year, month) - i);\r\n        } else {\r\n          calendarArr.push(date - day + i);\r\n        }\r\n      } else {\r\n        if (date - day + i > lastDate) {\r\n          calendarArr.push(i - getLastDay(year, month));\r\n        } else {\r\n          calendarArr.push(date - day + i);\r\n        }\r\n      }\r\n    }\r\n    setCalendarDataArr(calendarArr)\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios.get(`${host.server}/plan/${calendarDateInfo.setYear}/${calendarDateInfo.setWeek}`, {\r\n      withCredentials: true\r\n    }).then((result) => {\r\n      setCalendarData(result.data)\r\n    }).catch(error => { console.log('failed', error) })\r\n\r\n    \r\n  }, [calendarDateInfo])\r\n\r\n  useEffect(() => {\r\n    calendarCalc(calendarDateInfo.setYear, calendarDateInfo.setMonth, calendarDateInfo.setDay, calendarDateInfo.setDate);\r\n  }, [calendarData])\r\n\r\n\r\n  const prevCalendar = useCallback(() => {\r\n    // 1월에서 이전달로 갈시\r\n    if (calendarDateInfo.setDate < 8 && calendarDateInfo.setMonth === 1) {\r\n      setCalendarDateInfo({\r\n        ...calendarDateInfo,\r\n        setYear: calendarDateInfo.setYear - 1,\r\n        setMonth: 12,\r\n        setDate: 31 + (calendarDateInfo.setDate - 7),\r\n        setWeek: 53,\r\n      })\r\n    } else if (calendarDateInfo.setDate < 8) {\r\n      setCalendarDateInfo({\r\n        ...calendarDateInfo,\r\n        setMonth: calendarDateInfo.setMonth - 1,\r\n        setDate: getPrevLastDate(calendarDateInfo.setYear, calendarDateInfo.setMonth) + (calendarDateInfo.setDate - 7),\r\n        setWeek: calendarDateInfo.setWeek - 1,\r\n      })\r\n    } else {\r\n      setCalendarDateInfo({\r\n        ...calendarDateInfo,\r\n        setDate: calendarDateInfo.setDate - 7,\r\n        setWeek: calendarDateInfo.setWeek - 1,\r\n      })\r\n    }\r\n  })\r\n\r\n  const nextCalendar = useCallback(() => {\r\n    if (\r\n      calendarDateInfo.setDate > 24\r\n      && calendarDateInfo.setDay !== 6\r\n      && calendarDateInfo.setMonth === 12\r\n    ) {\r\n      setCalendarDateInfo({\r\n        ...calendarDateInfo,\r\n        setYear: calendarDateInfo.setYear + 1,\r\n        setMonth: 1,\r\n        setDate: 1 + (calendarDateInfo.setDate - 25),\r\n        setWeek: 2,\r\n      })\r\n    } else if (\r\n      calendarDateInfo.setDate === 31\r\n      && calendarDateInfo.setDay === 6\r\n      && calendarDateInfo.setMonth === 12\r\n    ) {\r\n      setCalendarDateInfo({\r\n        ...calendarDateInfo,\r\n        setYear: calendarDateInfo.setYear + 1,\r\n        setMonth: 1,\r\n        setDate: 1 + (calendarDateInfo.setDate - 25),\r\n        setWeek: 1,\r\n      })\r\n    } else if (calendarDateInfo.setDate > 24) {\r\n      setCalendarDateInfo({\r\n        ...calendarDateInfo,\r\n        setMonth: calendarDateInfo.setMonth + 1,\r\n        setDate: 7 - getLastDate(calendarDateInfo.setYear, calendarDateInfo.setMonth) + calendarDateInfo.setDate,\r\n        setWeek: calendarDateInfo.setWeek + 1,\r\n      })\r\n    } else {\r\n      setCalendarDateInfo({\r\n        ...calendarDateInfo,\r\n        setDate: calendarDateInfo.setDate + 7,\r\n        setWeek: calendarDateInfo.setWeek + 1,\r\n      })\r\n    }\r\n  })\r\n\r\n  const todayCalendar = useCallback(() => {\r\n    setCalendarDateInfo({\r\n      setYear: todayYear,\r\n      setMonth: todayMonth,\r\n      setDay: todayDay,\r\n      setDate: todayDate,\r\n      setWeek: todayWeek,\r\n    });\r\n  })\r\n\r\n  return (\r\n    <div className=\"LineBox\">\r\n      <div className=\"CalendarTitle\">\r\n        <button onClick={prevCalendar}>\r\n          <i className=\"fas fa-chevron-left\"></i>\r\n        </button>\r\n        <h2>{calendarDateInfo.setMonth}월 주간 식단표 <button className=\"Calendar__todayBtn\" onClick={todayCalendar}>today</button></h2>\r\n        <button onClick={nextCalendar}>\r\n          <i className=\"fas fa-chevron-right\"></i>\r\n        </button>\r\n      </div>\r\n\r\n      <ul className=\"Calendar\">\r\n        \r\n        {\r\n          calendarData\r\n          ? calendarDateArr.map((item, i) => {\r\n            return (\r\n              <CalendarItem\r\n                setIsDetailPopup={setIsDetailPopup}\r\n                setIsListPopup={setIsListPopup}\r\n                date={item}\r\n                week={i}\r\n                key={i}\r\n                setDay={calendarDateInfo.setDay}\r\n                calendarData={calendarData.data[i]}\r\n                fullCalendarData={calendarData}\r\n                setCalendarData={setCalendarData}\r\n                calendarSelectData={calendarSelectData}\r\n                setCalendarSelectData={setCalendarSelectData}\r\n                islogin={islogin}\r\n                setPopupCookingId={setPopupCookingId}\r\n                setYear={calendarDateInfo.setYear}\r\n                setWeek={calendarDateInfo.setWeek}\r\n              />\r\n            )\r\n          })\r\n          :null\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingListPop.jsx",["216"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from 'axios';\r\nimport CookingListItem from \"./CookingListItem\";\r\nconst host = require(\"../host\");\r\n\r\nconst CookingListPop = ({setIsListPopup, setIsDetailPopup, setPopupCookingId, popupCookingId, calendarSelectData, calendarData, setCalendarData}) => {\r\n\r\n    const [cookingList, setCookingList] = useState([])\r\n    useEffect(()=> {\r\n        handleList()\r\n    }, [])\r\n    \r\n    const handleList = useCallback((event) => {\r\n        if(event) {\r\n          let children = event.target.parentElement.children;\r\n          for(let i = 0; i < children.length; i++) {\r\n            children[i].classList.remove('CookingList__tabItem--active')\r\n          }\r\n          event.target.classList.add('CookingList__tabItem--active')\r\n        } \r\n    \r\n        axios.get(`${host.server}/recipe/list?style=${event ? event.target.attributes.nation.value : `kor`}`, {\r\n            withCredentials: true\r\n          }).then((result) => {\r\n          setCookingList(result.data.data)\r\n        }).catch( error => { console.log('failed', error) });\r\n    }, [setCookingList]);\r\n    \r\n    const handleCloseList = useCallback(\r\n        () => {\r\n            setIsListPopup(false)\r\n        },\r\n        [setIsListPopup],\r\n    )\r\n    return(\r\n        <article className=\"LayoutPopup\">\r\n            <div className=\"LayoutPopup__header\">\r\n                <h2 className=\"LayoutPopup__title\">요리 목록</h2>\r\n                <button className=\"LayoutPopup__close\" onClick={handleCloseList}><i className=\"fas fa-times\"></i><i className=\"ir\">닫기</i></button>\r\n            </div>\r\n            <div className=\"CookingList\">\r\n                <ul className=\"CookingList__tab\">\r\n                <li className=\"CookingList__tabItem CookingList__tabItem--active\" onClick={handleList} nation={`kor`}>\r\n                    한식\r\n                </li>\r\n                <li className=\"CookingList__tabItem\" onClick={handleList} nation={`chn`}>중식</li>\r\n                <li className=\"CookingList__tabItem\" onClick={handleList} nation={`wes`}>양식</li>\r\n                </ul>\r\n                <ul className=\"CookingList__dishList\">\r\n                {\r\n                    cookingList.map((item) => {\r\n                    return (\r\n                        <CookingListItem cookingList={item} key={item.id} popup={true} setIsListPopup={setIsListPopup} setIsDetailPopup={setIsDetailPopup} setPopupCookingId={setPopupCookingId} popupCookingId={popupCookingId} calendarSelectData={calendarSelectData} calendarData={calendarData} setCalendarData={setCalendarData}/>\r\n                    )\r\n                    })\r\n                }\r\n                </ul>\r\n            </div>\r\n        </article>\r\n    )\r\n};\r\n\r\nexport default CookingListPop;","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingListItem.jsx",["217","218","219","220","221"],"import React, {useCallback} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nconst host = require(\"../host\");\r\n\r\nconst CookingListItem = (props) => {\r\n    const {name, img} = props.cookingList;\r\n    const id = props.cookingList.id;\r\n    const popup = props.popup\r\n    const setIsListPopup = props.setIsListPopup;\r\n    const setIsDetailPopup = props.setIsDetailPopup;\r\n    const setPopupCookingId = props.setPopupCookingId;\r\n    const {popupCookingId, calendarSelectData, calendarData, setCalendarData} = props;\r\n\r\n    const handlePopupControl = useCallback(\r\n        () => {\r\n            setIsListPopup(prevState => false);\r\n            setIsDetailPopup(prevState => true);\r\n            setPopupCookingId(prevState => id);\r\n        },\r\n        [setIsListPopup, setIsDetailPopup, setPopupCookingId],\r\n    )\r\n\r\n    const handleCanlendarPlan = useCallback(()=>{    \r\n        setIsListPopup(prevState => false);\r\n        setPopupCookingId(prevState => id);\r\n\r\n        let planArr = [...calendarData.data];\r\n        planArr[calendarSelectData.planWeek][calendarSelectData.planEatTime] = id;\r\n\r\n        axios.put(`${host.server}/plan`,{\r\n            year: calendarSelectData.year,\r\n            week: calendarSelectData.week,\r\n            plan: planArr\r\n        },{\r\n            withCredentials: true\r\n        }).then((result) => {\r\n            axios.get(`${host.server}/plan/${calendarSelectData.year}/${calendarSelectData.week}`, {\r\n                withCredentials: true\r\n            }).then((result) => {\r\n                setCalendarData(result.data)\r\n            }).catch(error => { console.log('failed', error) })\r\n        }).catch(error => { console.log('failed', error) })\r\n    })\r\n\r\n    return(\r\n        <li className=\"CookingList__dishItem DishItem\">\r\n            <div className=\"DishItem__thumb\">\r\n\r\n                {\r\n                    popup \r\n                    ? (\r\n                        <img src={img} onClick={handlePopupControl} />\r\n                    ) : (\r\n                        <Link to={`/cookingList/${id}`}>\r\n                            <img\r\n                                src={img}\r\n                            />\r\n                        </Link>\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"DishItem__desc\">\r\n                <div className=\"DishItem__title\">{name}</div>\r\n                { popup && (\r\n                    <button className=\"DishItem__button DishItem__button--add\" onClick={handleCanlendarPlan}>\r\n                        + 추가하기\r\n                    </button>\r\n                    )\r\n                }\r\n            </div>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default CookingListItem;","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CalendarItem.jsx",["222","223","224","225","226","227","228"],"import React, { useCallback, useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nconst host = require(\"../host\");\r\n\r\nconst weekArr = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\r\nconst emptyImage = [\"fa-utensils\", \"fa-cheese\", \"fa-hamburger\", \"fa-fish\", \"fa-ice-cream\", \"fa-apple-alt\", \"fa-carrot\", \"fa-hotdog\", \"fa-egg\", \"fa-cookie-bite\"];\r\nconst randomImageNumber = () => {\r\n    return Math.floor(Math.random() * 10);\r\n}\r\n\r\nconst CalendarItem = (props = null) => {\r\n  const { fullCalendarData, calendarData, setCalendarData, calendarSelectData, setIsDetailPopup, setIsListPopup, date, week, setYear, setWeek, setDay, islogin, setPopupCookingId, setCalendarSelectData } = props;\r\n\r\n  return (\r\n    <li\r\n      className={setDay === week ? \"Calendar__item active\" : \"Calendar__item\"}\r\n    >\r\n      <div className=\"Calendar__day\">\r\n        <span>{weekArr[week]}</span>\r\n        <b>{date}</b>\r\n      </div>\r\n      <div className=\"Calendar__menu\">\r\n        <div className=\"Calendar__section CalendarMenu\">\r\n          <div className=\"CalendarMenu__tag\">\r\n            <span>아침</span>\r\n          </div>\r\n          {\r\n            (calendarData[0] && calendarData[0].id)\r\n            ? <CalendarItemContent \r\n                name={calendarData[0].name}\r\n                id={calendarData[0].id}\r\n                img={calendarData[0].img}\r\n                setIsDetailPopup={setIsDetailPopup}\r\n                setPopupCookingId={setPopupCookingId}\r\n                islogin={islogin}\r\n                fullCalendarData={fullCalendarData}\r\n                setCalendarData={setCalendarData} \r\n                calendarSelectData={calendarSelectData}\r\n                setCalendarSelectData={setCalendarSelectData} \r\n                eatTime={0} \r\n                week={week} \r\n                setYear={setYear}\r\n                setWeek={setWeek} \r\n              /> \r\n            : islogin \r\n              ? <CalendarItemAdd \r\n                  setIsListPopup={setIsListPopup} \r\n                  setCalendarSelectData={setCalendarSelectData} \r\n                  eatTime={0} \r\n                  week={week} \r\n                  setYear={setYear}\r\n                  setWeek={setWeek} \r\n                /> \r\n              : <CalendarItemEmpty />\r\n          }\r\n        </div>\r\n        <div className=\"Calendar__section CalendarMenu\">\r\n          <div className=\"CalendarMenu__tag\">\r\n            <span>점심</span>\r\n          </div>\r\n          {\r\n            (calendarData[1] && calendarData[1].id)\r\n            ? <CalendarItemContent \r\n                name={calendarData[1].name}\r\n                id={calendarData[1].id}\r\n                img={calendarData[1].img}\r\n                setIsDetailPopup={setIsDetailPopup}\r\n                setPopupCookingId={setPopupCookingId}\r\n                islogin={islogin}\r\n                fullCalendarData={fullCalendarData}\r\n                setCalendarData={setCalendarData} \r\n                calendarSelectData={calendarSelectData}\r\n                setCalendarSelectData={setCalendarSelectData} \r\n                eatTime={1} \r\n                week={week} \r\n                setYear={setYear}\r\n                setWeek={setWeek} \r\n              /> \r\n            : islogin \r\n              ? <CalendarItemAdd \r\n                  setIsListPopup={setIsListPopup} \r\n                  setCalendarSelectData={setCalendarSelectData} \r\n                  eatTime={1} \r\n                  week={week} \r\n                  setYear={setYear}\r\n                  setWeek={setWeek} \r\n                /> \r\n              : <CalendarItemEmpty />\r\n          }\r\n        </div>\r\n        <div className=\"Calendar__section CalendarMenu\">\r\n          <div className=\"CalendarMenu__tag\">\r\n            <span>저녁</span>\r\n          </div>\r\n          {\r\n            (calendarData[2] && calendarData[2].id)\r\n            ? <CalendarItemContent \r\n                name={calendarData[2].name}\r\n                id={calendarData[2].id}\r\n                img={calendarData[2].img}\r\n                setIsDetailPopup={setIsDetailPopup}\r\n                setPopupCookingId={setPopupCookingId}\r\n                islogin={islogin}\r\n                fullCalendarData={fullCalendarData}\r\n                setCalendarData={setCalendarData} \r\n                calendarSelectData={calendarSelectData}\r\n                setCalendarSelectData={setCalendarSelectData} \r\n                eatTime={2} \r\n                week={week} \r\n                setYear={setYear}\r\n                setWeek={setWeek} \r\n              /> \r\n            : islogin \r\n              ? <CalendarItemAdd \r\n                  setIsListPopup={setIsListPopup} \r\n                  setCalendarSelectData={setCalendarSelectData} \r\n                  eatTime={2} \r\n                  week={week} \r\n                  setYear={setYear}\r\n                  setWeek={setWeek} \r\n                /> \r\n              : <CalendarItemEmpty />\r\n          }\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\n\r\nconst CalendarItemEmpty = (props) => {\r\n  return (\r\n    <div className=\"CalendarMenu__empty\">\r\n      <i className={`fas ${emptyImage[randomImageNumber()]}`}></i>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst CalendarItemAdd = (props) => {\r\n  const { setIsListPopup, setCalendarSelectData, eatTime, week, setYear, setWeek } = props;\r\n\r\n  const handleShowList = useCallback(() => {\r\n    setIsListPopup(true);\r\n    setCalendarSelectData({\r\n      year: setYear,\r\n      week: setWeek,\r\n      planWeek: week,\r\n      planEatTime: eatTime,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <button\r\n      className=\"CalendarMenu__button CalendarMenu__button--add\"\r\n      onClick={handleShowList}\r\n    >\r\n      <i className=\"fas fa-plus\"></i>\r\n      <i className=\"ir\">메뉴 추가</i>\r\n    </button>\r\n  )\r\n}\r\n\r\nconst CalendarItemContent = (props) => {\r\n  const { setIsDetailPopup, name, id, img, setPopupCookingId, islogin, fullCalendarData, setCalendarData, calendarSelectData } = props;\r\n  const { setCalendarSelectData, eatTime, week, setYear, setWeek } = props;\r\n\r\n  const [planArrDelete, setPlanArrDelete] = useState();\r\n  const [onClickDelete, setOnclickDelete] = useState(false);\r\n\r\n  const handleShowDetail = useCallback(() => {\r\n    setPopupCookingId(id);\r\n    setIsDetailPopup(true);\r\n  });\r\n\r\n\r\n  useEffect(()=>{\r\n    console.log('handleDeleteOnCalendar')\r\n    if(onClickDelete){\r\n      const planArr = JSON.parse(JSON.stringify( fullCalendarData.data ))\r\n      for(let i = 0; i < 7; i++){\r\n        for(let j = 0; j < 3; j++){\r\n          planArr[i][j] = planArr[i][j].id\r\n        }\r\n      }\r\n      if(calendarSelectData){\r\n        setPlanArrDelete([...planArr, planArr[calendarSelectData.planWeek][calendarSelectData.planEatTime] = null]);\r\n      }\r\n      setOnclickDelete(false)\r\n    }\r\n  }, [calendarSelectData])\r\n\r\n  const handleDeleteOnCalendar = useCallback(() => {\r\n    setOnclickDelete(true)\r\n    setCalendarSelectData({\r\n      year: setYear,\r\n      week: setWeek,\r\n      planWeek: week,\r\n      planEatTime: eatTime,\r\n    });\r\n  }, [setYear, setWeek, week, eatTime]);\r\n\r\n  useEffect(() => {\r\n    console.log('planArrDelete')\r\n    // if(calendarSelectData){\r\n    //   axios.put(`${host.server}/plan`,{\r\n    //     year: calendarSelectData.year,\r\n    //     week: calendarSelectData.week,\r\n    //     plan: planArrDelete\r\n    //   },{\r\n    //       withCredentials: true\r\n    //   }).then((result) => {\r\n    //       axios.get(`${host.server}/plan/${calendarSelectData.year}/${calendarSelectData.week}`, {\r\n    //           withCredentials: true\r\n    //       }).then((result) => {\r\n    //           setCalendarData(result.data)\r\n    //       }).catch(error => { console.log('failed', error) })\r\n    //   }).catch(error => { console.log('failed', error) })\r\n    // }\r\n  }, [planArrDelete])\r\n\r\n\r\n  return (\r\n    <div className=\"CalendarMenu__wrap\">\r\n      <div className=\"CalendarMenu__thumb\">\r\n        <img\r\n          src={img}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div className=\"CalendarMenu__title\">{name}</div>\r\n      <div className=\"CalendarMenu__hover\">\r\n        <button\r\n          className=\"CalendarMenu__button CalendarMenu__button--more\"\r\n          onClick={handleShowDetail}\r\n        >\r\n          <i className=\"fas fa-search\"></i>\r\n          <i className=\"ir\">상세 보기</i>\r\n        </button>\r\n        {\r\n          islogin \r\n          ? \r\n          <button\r\n              className=\"CalendarMenu__button CalendarMenu__button--delete\"\r\n              onClick={handleDeleteOnCalendar}\r\n            >\r\n              <i className=\"far fa-trash-alt\"></i>\r\n              <i className=\"ir\">메뉴 삭제</i>\r\n          </button>\r\n          : null\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalendarItem;\r\n",["229","230"],"C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingFormSelectOption.jsx",["231","232","233","234","235"],"import React, {useCallback,useEffect,useState} from \"react\";\r\n\r\nconst CookingFormSelectOption = ({targetCategory,setTargetCategory,handleValue, setHandleValue, baseOption, categoryOptionArr, cookingForm, setCookingForm, setCategoryOptionArr, group, index}) => {\r\n\r\n  // 목록 직접입력/선택입력 옵션 스위치\r\n  const handleSelfInput = useCallback((e)=>{\r\n    e.preventDefault();\r\n    \r\n    // 직접입력, 선택입력 옵션설정\r\n    const copyArr = {...categoryOptionArr}\r\n    copyArr[group][index].selfInput = true;\r\n    setCategoryOptionArr(copyArr);\r\n\r\n    // handlevalue 컨트롤\r\n    const cookingArr = [...cookingForm.contents[group].contents]\r\n    cookingArr[index] = {\r\n      name: null,\r\n      amount: 0,\r\n      unit: null,\r\n    }\r\n    console.log(cookingArr, 'cookingArr 직접입력 변경 기본값')\r\n\r\n    setHandleValue({\r\n      targetCategory: group,\r\n      contents: cookingArr\r\n    })\r\n  }, [categoryOptionArr, cookingForm, group, index])\r\n\r\n\r\n  // 현재 선택 셀렉트박스\r\n  const [selectedKey, setSelectedKey] = useState({\r\n    key: Object.keys(baseOption[0]),\r\n    index: 0,\r\n  });\r\n\r\n\r\n  // 수정시 첫 unit 단위 셋팅\r\n  useEffect(() => {\r\n    if(cookingForm.contents[group].contents && baseOption){\r\n\r\n      let selecdIndex;\r\n\r\n      baseOption.map((item, mapIndex)=>{\r\n        if(\r\n          cookingForm.contents[group].contents[index] &&\r\n          cookingForm.contents[group].contents[index].name === Object.keys(item)[0] \r\n        ) { \r\n          selecdIndex = mapIndex;\r\n        } else {\r\n          selecdIndex = 0;\r\n        }\r\n      })\r\n\r\n      setSelectedKey({\r\n        key: Object.keys(baseOption[selecdIndex]),\r\n        index: selecdIndex,\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  const handleSelect = useCallback((e)=>{\r\n    e.preventDefault();\r\n\r\n    const copyArr = [...cookingForm.contents[group].contents]\r\n\r\n    copyArr[index].name = e.currentTarget.value;\r\n    copyArr[index].unit = baseOption[e.currentTarget.selectedIndex][e.currentTarget.value];\r\n\r\n    console.log(copyArr,'selectbox change -> handleValue change', group, 'category')\r\n    \r\n    setHandleValue({\r\n      targetCategory: group,\r\n      contents: copyArr\r\n    })\r\n\r\n    // 현재 선택 셀렉트박스\r\n    setSelectedKey({\r\n      key: e.currentTarget.value,\r\n      index: e.currentTarget.selectedIndex,\r\n    })\r\n  }, [cookingForm, group, baseOption, index])\r\n\r\n  const handleInput = useCallback((e)=>{\r\n    e.preventDefault();\r\n\r\n    const copyArr =[...cookingForm.contents[group].contents]\r\n    copyArr[index].amount = e.target.value;\r\n\r\n    setHandleValue({\r\n      targetCategory: group,\r\n      contents: copyArr\r\n    })\r\n  }, [index, group, cookingForm])\r\n\r\n    return(\r\n      <dd>\r\n        <div className=\"CookingForm__section01\">\r\n          <select name=\"name\" id=\"\" onChange={handleSelect}>\r\n            {\r\n              cookingForm.contents[group].contents && baseOption.map((item, mapIndex)=>{\r\n                return (\r\n                  cookingForm.contents[group].contents[index] &&\r\n                  cookingForm.contents[group].contents[index].name === Object.keys(item)[0] \r\n                  ? <option value={Object.keys(item)[0]} key={mapIndex} selected>{Object.keys(item)[0]}</option>\r\n                  : <option value={Object.keys(item)[0]} key={mapIndex}>{Object.keys(item)[0]}</option>\r\n                )\r\n              })\r\n            }\r\n          </select>\r\n        </div>\r\n        <div className=\"CookingForm__section02\">\r\n          {\r\n            cookingForm.contents[group].contents[index]\r\n            ? <input name=\"amount\" type=\"number\" onChange={handleInput} value={cookingForm.contents[group].contents[index].amount} />\r\n            : <input name=\"amount\" type=\"number\" onChange={handleInput} value=\"\" />\r\n          }\r\n        </div>\r\n        <div className=\"CookingForm__section03\">\r\n          {\r\n            baseOption[selectedKey.index][selectedKey.key]\r\n          }\r\n        </div>\r\n        <div className=\"CookingForm__section04\">\r\n          <button className=\"CookingForm__optionButton\" onClick={handleSelfInput}>직접입력</button>\r\n        </div>\r\n      </dd>\r\n    )\r\n  }\r\n\r\nexport default CookingFormSelectOption;","C:\\project\\weeklyRestaurant2\\front\\src\\component\\CookingFormCustomOption.jsx",["236","237","238","239"],"import React, {useCallback,useEffect,useState} from \"react\";\r\n\r\nconst CookingFormCustomOption = ({setTargetCategory,setHandleValue,cookingForm,baseOption, categoryOptionArr, setCategoryOptionArr, group, index}) => {\r\n  \r\n    // 목록 직접입력/선택입력 옵션 스위치\r\n    const handleSelfInput = useCallback((e)=>{\r\n      e.preventDefault();\r\n\r\n      // 직접입력, 선택입력 옵션설정\r\n      const copyArr = {...categoryOptionArr};\r\n      copyArr[group][index].selfInput = false;\r\n      setCategoryOptionArr(copyArr)\r\n\r\n      // handlevalue 컨트롤\r\n      const cookingArr = [...cookingForm.contents[group].contents]\r\n      cookingArr[index] = {\r\n          name: Object.keys(baseOption[0])[0],\r\n          amount: 0,\r\n          unit: baseOption[0][Object.keys(baseOption[0])],\r\n      }\r\n\r\n      setHandleValue({\r\n        targetCategory: group,\r\n        contents: cookingArr\r\n      })\r\n    }, [categoryOptionArr, group, index, baseOption, cookingForm])\r\n\r\n    const handleInput = useCallback((e)=>{\r\n      e.preventDefault();\r\n      const copyArr = [...cookingForm.contents[group].contents];\r\n      copyArr[index][e.target.name] = e.target.value;\r\n\r\n      setHandleValue({\r\n        targetCategory: group,\r\n        contents: copyArr\r\n      })\r\n    }, [index, group, cookingForm])\r\n  \r\n    return(\r\n      <dd className=\"CookingForm__option\">\r\n        <div className=\"CookingForm__section01\">\r\n          <input type=\"text\" name=\"name\" placeholder=\"재료명\" onChange={handleInput} />\r\n        </div>\r\n        <div className=\"CookingForm__section02\">\r\n          <input type=\"number\" name=\"amount\" placeholder=\"수량\" onChange={handleInput} />\r\n        </div>\r\n        <div className=\"CookingForm__section03\">\r\n          <input type=\"text\" name=\"unit\" placeholder=\"단위\" onChange={handleInput} />\r\n        </div>\r\n        <div className=\"CookingForm__section04\">\r\n          <button className=\"CookingForm__optionButton\" onClick={handleSelfInput}>선택입력</button>\r\n        </div>\r\n      </dd>\r\n      \r\n    )\r\n  }\r\n\r\n  export default CookingFormCustomOption;","C:\\project\\weeklyRestaurant-front2\\src\\index.js",[],["240","241"],"C:\\project\\weeklyRestaurant-front2\\src\\App.jsx",[],"C:\\project\\weeklyRestaurant-front2\\src\\component\\Navigation.jsx",["242","243"],"import React, { useCallback } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport logo from '../images/logo.png';\r\nimport axios from 'axios';\r\nconst host = require(\"../host\");\r\n\r\nconst Navigation = (props) => {\r\n  const {islogin, setIslogin} = props\r\n  let history = useHistory();\r\n\r\n  const handleLogout = useCallback(\r\n    () => {\r\n      axios.get(`${host.server}/member/logout`, {\r\n        withCredentials: true\r\n      }).then((result) => {\r\n        setIslogin(false);\r\n        sessionStorage.removeItem('islogin');\r\n        history.push('/');\r\n      }).catch( error => { console.log('failed', error) })\r\n    }, [setIslogin])\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"layoutWrap\">\r\n        <h1 className=\"logo\">\r\n          <Link to=\"/\">\r\n            <img\r\n              src=\"https://png2.cleanpng.com/sh/4e46ea245115c8278f5307440fa79692/L0KzQYm3U8MxN5Z6iZH0aYP2gLBuTfJqe6V3h59sYXboPbb5jfl1aV5oh9D7YXSwfbL1ifxiNaNqiAZqdYLkfsW0kvV0fJJ6itN3dD3vf7j2TcViapY8TNZsMHWzdYS4Tsc4PGM4TaU8MUW1QoW6UcE6PmE6T6g3cH7q/kisspng-bistro-cafe-ermita-conrad-manila-restaurant-restaurant-logo-5abe74dc0e0e31.7742353315224311960576.png\"\r\n              src={logo}\r\n              alt=\"\"\r\n            />\r\n          </Link>\r\n        </h1>\r\n        <ul>\r\n          <li><Link to=\"/cookingList\">요리 목록</Link></li>\r\n          {\r\n            islogin \r\n            ? \r\n            <>\r\n              <li><Link to=\"/cookingForm\">요리 추가</Link></li>\r\n              <li><Link to=\"/inventory\">재고 현황</Link></li>\r\n            </>\r\n            : null\r\n          }\r\n        </ul>\r\n        {\r\n          islogin\r\n          ? <button className=\"login\" onClick={handleLogout} >로그아웃</button>\r\n          : <Link to=\"/login\" className=\"login\">로그인</Link>\r\n        }\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","C:\\project\\weeklyRestaurant-front2\\src\\component\\Login.jsx",["244"],"import React, { useCallback, useState } from \"react\";\r\nimport axios from 'axios';\r\nconst host = require(\"../host\");\r\n\r\nconst Login = ({ setIslogin }) => {\r\n\r\n  const [loginValue, setLoginValue] = useState(\r\n    {\r\n      username: 'test',\r\n      password: 'abcd1234',\r\n    }\r\n  );\r\n\r\n  const onLoginInputId = useCallback((e) => {\r\n    e.preventDefault();\r\n    setLoginValue({ ...loginValue, username: e.target.value });\r\n  }, [loginValue])\r\n\r\n  const onLoginInputPassword = useCallback((e) => {\r\n    e.preventDefault();\r\n    setLoginValue({ ...loginValue, password: e.target.value });\r\n    setTimeout(() => { console.log(loginValue) }, 1000)\r\n  }, [loginValue])\r\n\r\n  const handleLogin = useCallback((event) => {\r\n    event.preventDefault();\r\n    axios.post(`${host.server}/member/login`, loginValue, {\r\n      withCredentials: true\r\n    }).then((result) => {\r\n      console.log(result)\r\n      setIslogin(true);\r\n      sessionStorage.setItem('islogin', true);\r\n    }).catch(error => { console.log('failed', error) })\r\n  }, [loginValue]);\r\n\r\n  return (\r\n    <form className=\"Login\">\r\n      <div className=\"Login__title\">로그인</div>\r\n      <div className=\"Login__inputWrap\">\r\n        <dl>\r\n          <dt>ID</dt>\r\n          <dd>\r\n            <input type=\"text\" onChange={onLoginInputId} value={loginValue.username} />\r\n          </dd>\r\n        </dl>\r\n        <dl>\r\n          <dt>Password</dt>\r\n          <dd>\r\n            <input type=\"password\" onChange={onLoginInputPassword} value={loginValue.password} />\r\n          </dd>\r\n        </dl>\r\n        <div className=\"Login__buttonWrap\">\r\n          <button className=\"Login__button\" onClick={handleLogin}>\r\n            로그인\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\project\\weeklyRestaurant-front2\\src\\component\\Inventory.jsx",["245"],"C:\\project\\weeklyRestaurant-front2\\src\\component\\CookingList.jsx",["246","247"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from 'axios';\r\nimport CookingListItem from \"./CookingListItem\";\r\nconst host = require(\"../host\");\r\n\r\nconst CookingList = ({setIsLoading}) => {\r\n\r\n  console.log(setIsLoading, 'setIsLoading')\r\n\r\n  const [cookingList, setCookingList] = useState([])\r\n\r\n  useEffect(()=> {\r\n    handleList()\r\n  }, [])\r\n\r\n  const handleList = useCallback((event) => {\r\n    if(event) {\r\n      let children = event.target.parentElement.children;\r\n      for(let i = 0; i < children.length; i++) {\r\n        children[i].classList.remove('CookingList__tabItem--active')\r\n      }\r\n      event.target.classList.add('CookingList__tabItem--active')\r\n    } \r\n    setIsLoading(true);\r\n    axios.get(`${host.server}/recipe/list?style=${event ? event.target.attributes.nation.value : `kor`}`, {\r\n      withCredentials: true\r\n    }).then((result) => {\r\n      setCookingList(result.data.data);\r\n      setIsLoading(false);\r\n    }).catch( error => { console.log('failed', error) });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"LineBox\">\r\n      <h2>요리 목록</h2>\r\n      <div className=\"CookingList\">\r\n        <ul className=\"CookingList__tab\">\r\n          <li className=\"CookingList__tabItem CookingList__tabItem--active\" onClick={handleList} nation={`kor`}>\r\n            한식\r\n          </li>\r\n          <li className=\"CookingList__tabItem\" onClick={handleList} nation={`chn`}>중식</li>\r\n          <li className=\"CookingList__tabItem\" onClick={handleList} nation={`wes`}>양식</li>\r\n        </ul>\r\n        <ul className=\"CookingList__dishList\">\r\n          {\r\n            cookingList.map((item) => {\r\n              return (\r\n                <CookingListItem cookingList={item} key={item.id} setIsLoading={setIsLoading} />\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CookingList;\r\n","C:\\project\\weeklyRestaurant-front2\\src\\component\\Main.jsx",["248"],"import React, { useState } from 'react';\r\nimport Calendar from './Calendar';\r\nimport CookingDetailPop from './CookingDetailPop';\r\nimport CookingListPop from './CookingListPop';\r\n\r\nconst Main = (props) => {\r\n  \r\n  const { islogin, setIsLoading } = props;\r\n  const [ isDetailPopup, setIsDetailPopup ] = useState(false);\r\n  const [ isListPopup, setIsListPopup ] = useState(false);\r\n  const [ popupCookingId, setPopupCookingId ] = useState();\r\n  const [ calendarSelectData, setCalendarSelectData ] = useState();\r\n  const [calendarData, setCalendarData] = useState();\r\n\r\n  return (\r\n    <>\r\n      <Calendar\r\n        setIsDetailPopup={setIsDetailPopup}\r\n        setIsListPopup={setIsListPopup}\r\n        islogin={islogin}\r\n        calendarSelectData={calendarSelectData}\r\n        setPopupCookingId={setPopupCookingId}\r\n        calendarData={calendarData}\r\n        setCalendarData={setCalendarData}\r\n        calendarSelectData={calendarSelectData}\r\n        setCalendarSelectData={setCalendarSelectData}\r\n        setIsLoading={setIsLoading}\r\n      />\r\n      {\r\n        isDetailPopup &&\r\n          <CookingDetailPop\r\n            setIsDetailPopup={setIsDetailPopup}\r\n            popupCookingId={popupCookingId}\r\n            setIsLoading={setIsLoading}\r\n          />\r\n      }\r\n      {\r\n        isListPopup &&\r\n          <CookingListPop\r\n            setIsListPopup={setIsListPopup}\r\n            setIsDetailPopup={setIsDetailPopup}\r\n            setPopupCookingId={setPopupCookingId}\r\n            calendarData={calendarData}\r\n            setCalendarData={setCalendarData}\r\n            popupCookingId={popupCookingId}\r\n            calendarSelectData={calendarSelectData}\r\n            setIsLoading={setIsLoading}\r\n          />\r\n      }\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Main;","C:\\project\\weeklyRestaurant-front2\\src\\component\\CookingForm.jsx",["249","250","251","252","253","254","255","256"],"C:\\project\\weeklyRestaurant-front2\\src\\component\\CookingDetail.jsx",["257","258","259"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport InventoryItem from './InventoryItem'\r\nconst host = require(\"../host\");\r\n\r\nconst CookingDetail = ({ islogin, setIsLoading }) => {\r\n    let { cookingId } = useParams();\r\n    let history = useHistory();\r\n\r\n    const [cookingDetail, setCookingDetail] = useState()\r\n\r\n    useEffect(() => {\r\n        handleDetail()\r\n    }, [])\r\n\r\n    const handleDetail = useCallback(() => {\r\n        setIsLoading(true);\r\n        axios.get(`${host.server}/recipe/${cookingId}`, {\r\n            withCredentials: true\r\n        }).then((result) => {\r\n            setCookingDetail(result.data.data);\r\n            setIsLoading(false);\r\n        }).catch(error => { console.log('failed', error) });\r\n    }, []);\r\n\r\n    const onDeleteRecipe = useCallback((e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n        axios.delete(`${host.server}/recipe`, {\r\n            data: { id: `${cookingId}` },\r\n            withCredentials: true\r\n        }).then((result) => {\r\n            setIsLoading(false);\r\n            console.log('삭제완료', cookingId, result)\r\n            history.push('/cookingList');\r\n        }).catch(error => { console.log('failed', error) });\r\n    }, [cookingId])\r\n\r\n    return (\r\n        <>\r\n            {cookingDetail && (\r\n                <div className=\"LineBox\">\r\n                    <h2>요리 상세</h2>\r\n                    <div className=\"CookingDetail\">\r\n                        <div className=\"CookingDetail__top\">\r\n                            <div className=\"CookingDetail__desc\">\r\n                                <div className=\"CookingDetail__title\">{cookingDetail.name}</div>\r\n                                <div className=\"CookingDetail__imgUrl\">\r\n                                    <span>이미지 URL</span>\r\n                                    <p>{cookingDetail.img}</p>\r\n                                </div>\r\n                                {\r\n                                    islogin && (\r\n                                        <div className=\"CookingDetail__buttonWrap\">\r\n                                            <Link to={`/cookingForm/${cookingId}`} className=\"CookingDetail__button CookingDetail__button--edit\">수정하기</Link>\r\n                                            <button className=\"CookingDetail__button CookingDetail__button--delete\" onClick={onDeleteRecipe}>삭제</button>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                            <div className=\"CookingDetail__thumb\">\r\n                                <img src={cookingDetail.img} alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"CookingDetail__ingredient\">\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">육류</dt>\r\n                                {\r\n                                    cookingDetail.contents.meat.contents ? (\r\n                                        cookingDetail.contents.meat.contents.map((item, i) => {\r\n                                            return (\r\n                                                <InventoryItem ingredient={item} key={i} />\r\n                                            )\r\n                                        })\r\n                                    ) : null\r\n                                }\r\n                            </dl>\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">어류</dt>\r\n                                {\r\n                                    cookingDetail.contents.fish.contents ? (\r\n                                        cookingDetail.contents.fish.contents.map((item, i) => {\r\n                                            return (\r\n                                                <InventoryItem ingredient={item} key={i} />\r\n                                            )\r\n                                        })\r\n                                    ) : null\r\n                                }\r\n                            </dl>\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">부재료</dt>\r\n                                {\r\n                                    cookingDetail.contents.misc.contents ? (\r\n                                        cookingDetail.contents.misc.contents.map((item, i) => {\r\n                                            return (\r\n                                                <InventoryItem ingredient={item} key={i} />\r\n                                            )\r\n                                        })\r\n                                    ) : null\r\n                                }\r\n                            </dl>\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">양념(소스)</dt>\r\n                                {\r\n                                    cookingDetail.contents.sauce.contents ? (\r\n                                        cookingDetail.contents.sauce.contents.map((item, i) => {\r\n                                            return (\r\n                                                <InventoryItem ingredient={item} key={i} />\r\n                                            )\r\n                                        })\r\n                                    ) : null\r\n                                }\r\n                            </dl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CookingDetail;\r\n","C:\\project\\weeklyRestaurant-front2\\src\\host.js",[],"C:\\project\\weeklyRestaurant-front2\\src\\component\\InventoryItem.jsx",["260"],"C:\\project\\weeklyRestaurant-front2\\src\\component\\InventoryPopup.jsx",["261","262"],"C:\\project\\weeklyRestaurant-front2\\src\\component\\Calendar.jsx",["263","264","265","266","267","268","269"],"import React, { useCallback, useState, useEffect } from \"react\";\r\nimport CalendarItem from './CalendarItem'\r\nimport axios from 'axios';\r\nconst host = require(\"../host\");\r\n\r\nconst Calendar = (props) => {\r\n\r\n  const date = new Date();\r\n  const getWeek = useCallback((dowOffset) => {\r\n    dowOffset = typeof (dowOffset) == 'number' ? dowOffset : 0;\r\n    var newdate = new Date();\r\n    var newYear = new Date(newdate.getFullYear(), 0, 1);\r\n    var day = newYear.getDay() - dowOffset;\r\n    day = (day >= 0 ? day : day + 7);\r\n    var daynum = Math.floor((newdate.getTime() - newYear.getTime() -\r\n      (newdate.getTimezoneOffset() - newYear.getTimezoneOffset()) * 60000) / 86400000) + 1;\r\n    var weeknum;\r\n    if (day < 4) {\r\n      weeknum = Math.floor((daynum + day - 1) / 7) + 1;\r\n      if (weeknum > 52) {\r\n        let nYear = new Date(newdate.getFullYear() + 1, 0, 1);\r\n        let nday = nYear.getDay() - dowOffset;\r\n        nday = nday >= 0 ? nday : nday + 7;\r\n        weeknum = nday < 4 ? 1 : 53;\r\n      }\r\n    }\r\n    else {\r\n      weeknum = Math.floor((daynum + day - 1) / 7);\r\n    }\r\n    return weeknum;\r\n  });\r\n\r\n  const getFirstDay = (year) => {\r\n    return new Date(year, 0, 1).getDay() - 1;\r\n  };\r\n\r\n  const todayYear = date.getFullYear(); // 년\r\n  const todayMonth = date.getMonth() + 1; // 월\r\n  const todayDate = date.getDate(); // 날짜\r\n  const todayDay = date.getDay(); // 요일\r\n  const todayWeek = getWeek(getFirstDay(todayYear)); // 몇주차\r\n  const lastDate = new Date(todayYear, todayMonth, 0).getDate();\r\n\r\n  const getLastDay = function (year, month) {\r\n    return new Date(year, month, 0).getDay();\r\n  };\r\n\r\n  const getLastDate = function (year, month) {\r\n    return new Date(year, month, 0).getDate();\r\n  };\r\n\r\n  const getPrevLastDate = function (year, month) {\r\n    if (month === 1) {\r\n      return new Date(year - 1, 12, 0).getDate();\r\n    } else {\r\n      return new Date(year, month - 1, 0).getDate();\r\n    }\r\n  }\r\n\r\n  const {setIsLoading,calendarData, setCalendarData, calendarSelectData, setIsDetailPopup, setIsListPopup, islogin, setPopupCookingId, setCalendarSelectData } = props;\r\n  const [calendarDateInfo, setCalendarDateInfo] = useState({\r\n    setYear: todayYear,\r\n    setMonth: todayMonth,\r\n    setDay: todayDay,\r\n    setDate: todayDate,\r\n    setWeek: todayWeek,\r\n  });\r\n  const [calendarDateArr, setCalendarDataArr] = useState([]);\r\n\r\n  const calendarCalc = useCallback((year, month, day, date) => {\r\n    let calendarArr = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      if (day > i) {\r\n        if (date - day + i <= 0) {\r\n          calendarArr.unshift(getPrevLastDate(year, month) - i);\r\n        } else {\r\n          calendarArr.push(date - day + i);\r\n        }\r\n      } else {\r\n        if (date - day + i > lastDate) {\r\n          calendarArr.push(i - getLastDay(year, month));\r\n        } else {\r\n          calendarArr.push(date - day + i);\r\n        }\r\n      }\r\n    }\r\n    setCalendarDataArr(calendarArr)\r\n  });\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    axios.get(`${host.server}/plan/${calendarDateInfo.setYear}/${calendarDateInfo.setWeek}`, {\r\n      withCredentials: true\r\n    }).then((result) => {\r\n      setCalendarData(result.data)\r\n      setIsLoading(false)\r\n    }).catch(error => { console.log('failed', error) })\r\n\r\n    \r\n  }, [calendarDateInfo])\r\n\r\n  useEffect(() => {\r\n    calendarCalc(calendarDateInfo.setYear, calendarDateInfo.setMonth, calendarDateInfo.setDay, calendarDateInfo.setDate);\r\n  }, [calendarData])\r\n\r\n\r\n  const prevCalendar = useCallback(() => {\r\n    // 1월에서 이전달로 갈시\r\n    if (calendarDateInfo.setDate < 8 && calendarDateInfo.setMonth === 1) {\r\n      setCalendarDateInfo({\r\n        ...calendarDateInfo,\r\n        setYear: calendarDateInfo.setYear - 1,\r\n        setMonth: 12,\r\n        setDate: 31 + (calendarDateInfo.setDate - 7),\r\n        setWeek: 53,\r\n      })\r\n    } else if (calendarDateInfo.setDate < 8) {\r\n      setCalendarDateInfo({\r\n        ...calendarDateInfo,\r\n        setMonth: calendarDateInfo.setMonth - 1,\r\n        setDate: getPrevLastDate(calendarDateInfo.setYear, calendarDateInfo.setMonth) + (calendarDateInfo.setDate - 7),\r\n        setWeek: calendarDateInfo.setWeek - 1,\r\n      })\r\n    } else {\r\n      setCalendarDateInfo({\r\n        ...calendarDateInfo,\r\n        setDate: calendarDateInfo.setDate - 7,\r\n        setWeek: calendarDateInfo.setWeek - 1,\r\n      })\r\n    }\r\n  })\r\n\r\n  const nextCalendar = useCallback(() => {\r\n    if (\r\n      calendarDateInfo.setDate > 24\r\n      && calendarDateInfo.setDay !== 6\r\n      && calendarDateInfo.setMonth === 12\r\n    ) {\r\n      setCalendarDateInfo({\r\n        ...calendarDateInfo,\r\n        setYear: calendarDateInfo.setYear + 1,\r\n        setMonth: 1,\r\n        setDate: 1 + (calendarDateInfo.setDate - 25),\r\n        setWeek: 2,\r\n      })\r\n    } else if (\r\n      calendarDateInfo.setDate === 31\r\n      && calendarDateInfo.setDay === 6\r\n      && calendarDateInfo.setMonth === 12\r\n    ) {\r\n      setCalendarDateInfo({\r\n        ...calendarDateInfo,\r\n        setYear: calendarDateInfo.setYear + 1,\r\n        setMonth: 1,\r\n        setDate: 1 + (calendarDateInfo.setDate - 25),\r\n        setWeek: 1,\r\n      })\r\n    } else if (calendarDateInfo.setDate > 24) {\r\n      setCalendarDateInfo({\r\n        ...calendarDateInfo,\r\n        setMonth: calendarDateInfo.setMonth + 1,\r\n        setDate: 7 - getLastDate(calendarDateInfo.setYear, calendarDateInfo.setMonth) + calendarDateInfo.setDate,\r\n        setWeek: calendarDateInfo.setWeek + 1,\r\n      })\r\n    } else {\r\n      setCalendarDateInfo({\r\n        ...calendarDateInfo,\r\n        setDate: calendarDateInfo.setDate + 7,\r\n        setWeek: calendarDateInfo.setWeek + 1,\r\n      })\r\n    }\r\n  })\r\n\r\n  const todayCalendar = useCallback(() => {\r\n    setCalendarDateInfo({\r\n      setYear: todayYear,\r\n      setMonth: todayMonth,\r\n      setDay: todayDay,\r\n      setDate: todayDate,\r\n      setWeek: todayWeek,\r\n    });\r\n  })\r\n\r\n  return (\r\n    <div className=\"LineBox\">\r\n      <div className=\"CalendarTitle\">\r\n        <button onClick={prevCalendar}>\r\n          <i className=\"fas fa-chevron-left\"></i>\r\n        </button>\r\n        <h2>{calendarDateInfo.setMonth}월 주간 식단표 <button className=\"Calendar__todayBtn\" onClick={todayCalendar}>today</button></h2>\r\n        <button onClick={nextCalendar}>\r\n          <i className=\"fas fa-chevron-right\"></i>\r\n        </button>\r\n      </div>\r\n\r\n      <ul className=\"Calendar\">\r\n        \r\n        {\r\n          calendarData\r\n          ? calendarDateArr.map((item, i) => {\r\n            return (\r\n              <CalendarItem\r\n                setIsDetailPopup={setIsDetailPopup}\r\n                setIsListPopup={setIsListPopup}\r\n                date={item}\r\n                week={i}\r\n                key={i}\r\n                setDay={calendarDateInfo.setDay}\r\n                calendarData={calendarData.data[i]}\r\n                fullCalendarData={calendarData}\r\n                setCalendarData={setCalendarData}\r\n                calendarSelectData={calendarSelectData}\r\n                setCalendarSelectData={setCalendarSelectData}\r\n                islogin={islogin}\r\n                todayDate={todayDate}\r\n                todayMonth={todayMonth}\r\n                todayYear={todayYear}\r\n                setPopupCookingId={setPopupCookingId}\r\n                setYear={calendarDateInfo.setYear}\r\n                setWeek={calendarDateInfo.setWeek}\r\n                setMonth={calendarDateInfo.setMonth}\r\n                setIsLoading={setIsLoading}\r\n              />\r\n            )\r\n          })\r\n          :null\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","C:\\project\\weeklyRestaurant-front2\\src\\component\\CookingListItem.jsx",["270","271","272","273","274","275"],"import React, {useCallback} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nconst host = require(\"../host\");\r\n\r\nconst CookingListItem = (props) => {\r\n    const {name, img} = props.cookingList;\r\n    const id = props.cookingList.id;\r\n    const popup = props.popup\r\n    const setIsListPopup = props.setIsListPopup;\r\n    const setIsDetailPopup = props.setIsDetailPopup;\r\n    const setPopupCookingId = props.setPopupCookingId;\r\n    const {popupCookingId, calendarSelectData, calendarData, setCalendarData, setIsLoading} = props;\r\n\r\n    const handlePopupControl = useCallback(\r\n        () => {\r\n            setIsListPopup(prevState => false);\r\n            setIsDetailPopup(prevState => true);\r\n            setPopupCookingId(prevState => id);\r\n        },\r\n        [setIsListPopup, setIsDetailPopup, setPopupCookingId],\r\n    )\r\n\r\n    const handleCanlendarPlan = useCallback(()=>{    \r\n        setIsListPopup(prevState => false);\r\n        setPopupCookingId(prevState => id);\r\n        setIsLoading(true);\r\n\r\n        axios.put(`${host.server}/plan`,{\r\n            year: calendarSelectData.year,\r\n            week: calendarSelectData.week,\r\n            day: calendarSelectData.planWeek,\r\n            meal: calendarSelectData.planEatTime,\r\n            recipeId: id,\r\n        },{\r\n            withCredentials: true\r\n        }).then((result) => {\r\n            console.log(result)\r\n            axios.get(`${host.server}/plan/${calendarSelectData.year}/${calendarSelectData.week}`, {\r\n                withCredentials: true\r\n            }).then((result) => {\r\n                setCalendarData(result.data);\r\n                setIsLoading(false);\r\n            }).catch(error => { console.log('failed', error) })\r\n        }).catch(error => { console.log('failed', error) })\r\n    }, [calendarSelectData, id])\r\n\r\n    return(\r\n        <li className=\"CookingList__dishItem DishItem\">\r\n            <div className=\"DishItem__thumb\">\r\n\r\n                {\r\n                    popup \r\n                    ? (\r\n                        <img src={img} onClick={handlePopupControl} />\r\n                    ) : (\r\n                        <Link to={`/cookingList/${id}`}>\r\n                            <img\r\n                                src={img}\r\n                            />\r\n                        </Link>\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"DishItem__desc\">\r\n                <div className=\"DishItem__title\">{name}</div>\r\n                { popup && (\r\n                    <button className=\"DishItem__button DishItem__button--add\" onClick={handleCanlendarPlan}>\r\n                        + 추가하기\r\n                    </button>\r\n                    )\r\n                }\r\n            </div>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default CookingListItem;","C:\\project\\weeklyRestaurant-front2\\src\\component\\CookingFormCustomOption.jsx",["276","277","278","279"],"C:\\project\\weeklyRestaurant-front2\\src\\component\\CookingListPop.jsx",["280","281"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport axios from 'axios';\r\nimport CookingListItem from \"./CookingListItem\";\r\nconst host = require(\"../host\");\r\n\r\nconst CookingListPop = ({setIsLoading,setIsListPopup, setIsDetailPopup, setPopupCookingId, popupCookingId, calendarSelectData, calendarData, setCalendarData}) => {\r\n\r\n    const [cookingList, setCookingList] = useState([])\r\n    useEffect(()=> {\r\n        handleList()\r\n    }, [])\r\n    \r\n    const handleList = useCallback((event) => {\r\n        if(event) {\r\n          let children = event.target.parentElement.children;\r\n          for(let i = 0; i < children.length; i++) {\r\n            children[i].classList.remove('CookingList__tabItem--active')\r\n          }\r\n          event.target.classList.add('CookingList__tabItem--active')\r\n        } \r\n\r\n        setIsLoading(true);\r\n    \r\n        axios.get(`${host.server}/recipe/list?style=${event ? event.target.attributes.nation.value : `kor`}`, {\r\n            withCredentials: true\r\n          }).then((result) => {\r\n          setCookingList(result.data.data);\r\n          setIsLoading(false);\r\n        }).catch( error => { console.log('failed', error) });\r\n    }, [setCookingList]);\r\n    \r\n    const handleCloseList = useCallback(\r\n        () => {\r\n            setIsListPopup(false)\r\n        },\r\n        [setIsListPopup],\r\n    )\r\n    return(\r\n        <article className=\"LayoutPopup\">\r\n            <div className=\"LayoutPopup__header\">\r\n                <h2 className=\"LayoutPopup__title\">요리 목록</h2>\r\n                <button className=\"LayoutPopup__close\" onClick={handleCloseList}><i className=\"fas fa-times\"></i><i className=\"ir\">닫기</i></button>\r\n            </div>\r\n            <div className=\"CookingList\">\r\n                <ul className=\"CookingList__tab\">\r\n                <li className=\"CookingList__tabItem CookingList__tabItem--active\" onClick={handleList} nation={`kor`}>\r\n                    한식\r\n                </li>\r\n                <li className=\"CookingList__tabItem\" onClick={handleList} nation={`chn`}>중식</li>\r\n                <li className=\"CookingList__tabItem\" onClick={handleList} nation={`wes`}>양식</li>\r\n                </ul>\r\n                <ul className=\"CookingList__dishList\">\r\n                {\r\n                    cookingList.map((item) => {\r\n                    return (\r\n                        <CookingListItem setIsLoading={setIsLoading} cookingList={item} key={item.id} popup={true} setIsListPopup={setIsListPopup} setIsDetailPopup={setIsDetailPopup} setPopupCookingId={setPopupCookingId} popupCookingId={popupCookingId} calendarSelectData={calendarSelectData} calendarData={calendarData} setCalendarData={setCalendarData}/>\r\n                    )\r\n                    })\r\n                }\r\n                </ul>\r\n            </div>\r\n        </article>\r\n    )\r\n};\r\n\r\nexport default CookingListPop;","C:\\project\\weeklyRestaurant-front2\\src\\component\\CookingFormSelectOption.jsx",["282","283","284","285","286"],"import React, { useCallback, useEffect, useState } from \"react\";\r\n\r\nconst CookingFormSelectOption = ({ targetCategory, setTargetCategory, handleValue, setHandleValue, baseOption, categoryOptionArr, cookingForm, setCookingForm, setCategoryOptionArr, group, index }) => {\r\n\r\n  // 목록 직접입력/선택입력 옵션 스위치\r\n  const handleSelfInput = useCallback((e) => {\r\n    e.preventDefault();\r\n\r\n    // 직접입력, 선택입력 옵션설정\r\n    const copyArr = { ...categoryOptionArr }\r\n    copyArr[group][index].selfInput = true;\r\n    setCategoryOptionArr(copyArr);\r\n\r\n    // handlevalue 컨트롤\r\n    const cookingArr = [...cookingForm.contents[group].contents]\r\n    cookingArr[index] = {\r\n      name: null,\r\n      amount: 0,\r\n      unit: null,\r\n    }\r\n    console.log(cookingArr, 'cookingArr 직접입력 변경 기본값')\r\n\r\n    setHandleValue({\r\n      targetCategory: group,\r\n      contents: cookingArr\r\n    })\r\n  }, [categoryOptionArr, cookingForm, group, index])\r\n\r\n\r\n  // 현재 선택 셀렉트박스\r\n  const [selectedKey, setSelectedKey] = useState({\r\n    key: Object.keys(baseOption[0]),\r\n    index: 0,\r\n  });\r\n\r\n\r\n  // 수정시 첫 unit 단위 셋팅\r\n  useEffect(() => {\r\n    if (cookingForm.contents[group].contents && baseOption) {\r\n\r\n      let selecdIndex;\r\n\r\n      baseOption.map((item, mapIndex) => {\r\n        if (\r\n          cookingForm.contents[group].contents[index] &&\r\n          cookingForm.contents[group].contents[index].name === Object.keys(item)[0]\r\n        ) {\r\n          selecdIndex = mapIndex;\r\n        } else {\r\n          selecdIndex = 0;\r\n        }\r\n      })\r\n\r\n      setSelectedKey({\r\n        key: Object.keys(baseOption[selecdIndex]),\r\n        index: selecdIndex,\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  const handleSelect = useCallback((e) => {\r\n    e.preventDefault();\r\n\r\n    const copyArr = [...cookingForm.contents[group].contents]\r\n\r\n    copyArr[index].name = e.currentTarget.value;\r\n    copyArr[index].unit = baseOption[e.currentTarget.selectedIndex][e.currentTarget.value];\r\n\r\n    console.log(copyArr, 'selectbox change -> handleValue change', group, 'category')\r\n\r\n    setHandleValue({\r\n      targetCategory: group,\r\n      contents: copyArr\r\n    })\r\n\r\n    // 현재 선택 셀렉트박스\r\n    setSelectedKey({\r\n      key: e.currentTarget.value,\r\n      index: e.currentTarget.selectedIndex,\r\n    })\r\n  }, [cookingForm, group, baseOption, index])\r\n\r\n  const handleInput = useCallback((e) => {\r\n    e.preventDefault();\r\n\r\n    const copyArr = [...cookingForm.contents[group].contents]\r\n    copyArr[index].amount = e.target.value;\r\n\r\n    setHandleValue({\r\n      targetCategory: group,\r\n      contents: copyArr\r\n    })\r\n  }, [index, group, cookingForm])\r\n\r\n  return (\r\n    <dd>\r\n      <div className=\"CookingForm__section01\">\r\n        <select name=\"name\" id=\"\" onChange={handleSelect}>\r\n          {\r\n            cookingForm.contents[group].contents && baseOption.map((item, mapIndex) => {\r\n              return (\r\n                cookingForm.contents[group].contents[index] &&\r\n                  cookingForm.contents[group].contents[index].name === Object.keys(item)[0]\r\n                  ? <option value={Object.keys(item)[0]} key={mapIndex} selected>{Object.keys(item)[0]}</option>\r\n                  : <option value={Object.keys(item)[0]} key={mapIndex}>{Object.keys(item)[0]}</option>\r\n              )\r\n            })\r\n          }\r\n        </select>\r\n      </div>\r\n      <div className=\"CookingForm__section02\">\r\n        {\r\n          cookingForm.contents[group].contents[index]\r\n            ? <input name=\"amount\" type=\"number\" onChange={handleInput} value={cookingForm.contents[group].contents[index].amount} />\r\n            : <input name=\"amount\" type=\"number\" onChange={handleInput} value=\"\" />\r\n        }\r\n      </div>\r\n      <div className=\"CookingForm__section03\">\r\n        {\r\n          baseOption[selectedKey.index][selectedKey.key]\r\n        }\r\n      </div>\r\n      <div className=\"CookingForm__section04\">\r\n        <button className=\"CookingForm__optionButton\" onClick={handleSelfInput}>직접입력</button>\r\n      </div>\r\n    </dd>\r\n  )\r\n}\r\n\r\nexport default CookingFormSelectOption;","C:\\project\\weeklyRestaurant-front2\\src\\component\\CookingDetailPop.jsx",["287","288","289"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport InventoryItem from './InventoryItem'\r\nconst host = require(\"../host\");\r\n\r\n\r\nconst CookingDetailPop = ({setIsLoading, setIsDetailPopup, popupCookingId = 1134 }) => {\r\n    const handleCloseDetail = useCallback(\r\n        () => {\r\n            setIsDetailPopup(false)\r\n        })\r\n\r\n    const [cookingDetail, setCookingDetail] = useState()\r\n\r\n    console.log(cookingDetail, popupCookingId)\r\n\r\n    useEffect(() => {\r\n        handleDetail()\r\n    }, [])\r\n\r\n    const handleDetail = useCallback(() => {\r\n        setIsLoading(true)\r\n        axios.get(`${host.server}/recipe/${popupCookingId}`, {\r\n            withCredentials: true\r\n        }).then((result) => {\r\n            console.log(result.data)\r\n            setCookingDetail(result.data.data);\r\n            setIsLoading(false);\r\n        }).catch(error => { console.log('failed', error) });\r\n    }, [popupCookingId]);\r\n\r\n    return (\r\n        <>\r\n            {cookingDetail ? (\r\n\r\n                <article className=\"LayoutPopup\">\r\n                    <div className=\"LayoutPopup__header\">\r\n                        <h2 className=\"LayoutPopup__title\">상세보기 {popupCookingId}</h2>\r\n                        <button className=\"LayoutPopup__close\" onClick={handleCloseDetail}><i className=\"fas fa-times\"></i><i className=\"ir\">닫기</i></button>\r\n                    </div>\r\n                    <div className=\"CookingDetail\">\r\n                        <div className=\"CookingDetail__top\">\r\n                            <div className=\"CookingDetail__desc\">\r\n                                <div className=\"CookingDetail__title\">{cookingDetail.name}</div>\r\n                                <div className=\"CookingDetail__imgUrl\">\r\n                                    <span>이미지 URL</span>\r\n                                    <p>{cookingDetail.img}</p>\r\n                                </div>\r\n                                {/* <div className=\"CookingDetail__buttonWrap\">\r\n                                    <button className=\"CookingDetail__button CookingDetail__button--edit\">수정하기</button>\r\n                                    <button className=\"CookingDetail__button CookingDetail__button--delete\">삭제</button>\r\n                                </div> */}\r\n                            </div>\r\n                            <div className=\"CookingDetail__thumb\">\r\n                                <img src={cookingDetail.img} alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"CookingDetail__ingredient\">\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">육류</dt>\r\n                                <dd>\r\n                                    {\r\n                                        cookingDetail.contents.meat.contents ? (\r\n                                            cookingDetail.contents.meat.contents.map((item, i) => {\r\n                                                return (\r\n                                                    <InventoryItem ingredient={item} key={i} />\r\n                                                )\r\n                                            })\r\n                                        ) : null\r\n                                    }\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">어류</dt>\r\n                                <dd>\r\n                                    {\r\n                                        cookingDetail.contents.fish.contents ? (\r\n                                            cookingDetail.contents.fish.contents.map((item, i) => {\r\n                                                return (\r\n                                                    <InventoryItem ingredient={item} key={i} />\r\n                                                )\r\n                                            })\r\n                                        ) : null\r\n                                    }\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">부재료</dt>\r\n                                <dd>\r\n                                    {\r\n                                        cookingDetail.contents.misc.contents ? (\r\n                                            cookingDetail.contents.misc.contents.map((item, i) => {\r\n                                                return (\r\n                                                    <InventoryItem ingredient={item} key={i} />\r\n                                                )\r\n                                            })\r\n                                        ) : null\r\n                                    }\r\n                                </dd>\r\n                            </dl>\r\n                            <dl>\r\n                                <dt className=\"CookingDetail__category\">양념(소스)</dt>\r\n                                <dd>\r\n                                    {\r\n                                        cookingDetail.contents.sauce.contents ? (\r\n                                            cookingDetail.contents.sauce.contents.map((item, i) => {\r\n                                                return (\r\n                                                    <InventoryItem ingredient={item} key={i} />\r\n                                                )\r\n                                            })\r\n                                        ) : null\r\n                                    }\r\n                                </dd>\r\n                            </dl>\r\n                        </div>\r\n                    </div>\r\n                </article>\r\n\r\n            ) : null}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default CookingDetailPop;","C:\\project\\weeklyRestaurant-front2\\src\\component\\CalendarItem.jsx",["290","291","292","293","294","295","296","297","298"],"import React, { useCallback, useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nconst host = require(\"../host\");\r\n\r\nconst weekArr = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\r\nconst emptyImage = [\"fa-utensils\", \"fa-cheese\", \"fa-hamburger\", \"fa-fish\", \"fa-ice-cream\", \"fa-apple-alt\", \"fa-carrot\", \"fa-hotdog\", \"fa-egg\", \"fa-cookie-bite\"];\r\nconst randomImageNumber = () => {\r\n    return Math.floor(Math.random() * 10);\r\n}\r\n\r\nconst CalendarItem = (props = null) => {\r\n  const {setIsLoading, todayYear,todayMonth,todayDate,setMonth, fullCalendarData, calendarData, setCalendarData, calendarSelectData, setIsDetailPopup, setIsListPopup, date, week, setYear, setWeek, setDay, islogin, setPopupCookingId, setCalendarSelectData } = props;\r\n\r\n  return (\r\n    <li\r\n      className={ todayYear === setYear && todayMonth === setMonth && todayDate === date ? \"Calendar__item active\" : \"Calendar__item\"}\r\n    >\r\n      <div className=\"Calendar__day\">\r\n        <span>{weekArr[week]}</span>\r\n        <b>{date}</b>\r\n      </div>\r\n      <div className=\"Calendar__menu\">\r\n        <div className=\"Calendar__section CalendarMenu\">\r\n          <div className=\"CalendarMenu__tag\">\r\n            <span>아침</span>\r\n          </div>\r\n          {\r\n            (calendarData[0] && calendarData[0].id)\r\n            ? <CalendarItemContent \r\n                name={calendarData[0].name}\r\n                id={calendarData[0].id}\r\n                img={calendarData[0].img}\r\n                setIsDetailPopup={setIsDetailPopup}\r\n                setPopupCookingId={setPopupCookingId}\r\n                islogin={islogin}\r\n                fullCalendarData={fullCalendarData}\r\n                setCalendarData={setCalendarData} \r\n                calendarSelectData={calendarSelectData}\r\n                setCalendarSelectData={setCalendarSelectData} \r\n                eatTime={0} \r\n                week={week} \r\n                setYear={setYear}\r\n                setWeek={setWeek} \r\n                setIsLoading={setIsLoading}\r\n              /> \r\n            : islogin \r\n              ? <CalendarItemAdd \r\n                  setIsListPopup={setIsListPopup} \r\n                  setCalendarSelectData={setCalendarSelectData} \r\n                  eatTime={0} \r\n                  week={week} \r\n                  setYear={setYear}\r\n                  setWeek={setWeek} \r\n                /> \r\n              : <CalendarItemEmpty />\r\n          }\r\n        </div>\r\n        <div className=\"Calendar__section CalendarMenu\">\r\n          <div className=\"CalendarMenu__tag\">\r\n            <span>점심</span>\r\n          </div>\r\n          {\r\n            (calendarData[1] && calendarData[1].id)\r\n            ? <CalendarItemContent \r\n                name={calendarData[1].name}\r\n                id={calendarData[1].id}\r\n                img={calendarData[1].img}\r\n                setIsDetailPopup={setIsDetailPopup}\r\n                setPopupCookingId={setPopupCookingId}\r\n                islogin={islogin}\r\n                fullCalendarData={fullCalendarData}\r\n                setCalendarData={setCalendarData} \r\n                calendarSelectData={calendarSelectData}\r\n                setCalendarSelectData={setCalendarSelectData} \r\n                eatTime={1} \r\n                week={week} \r\n                setYear={setYear}\r\n                setWeek={setWeek} \r\n                setIsLoading={setIsLoading}\r\n              /> \r\n            : islogin \r\n              ? <CalendarItemAdd \r\n                  setIsListPopup={setIsListPopup} \r\n                  setCalendarSelectData={setCalendarSelectData} \r\n                  eatTime={1} \r\n                  week={week} \r\n                  setYear={setYear}\r\n                  setWeek={setWeek} \r\n                /> \r\n              : <CalendarItemEmpty />\r\n          }\r\n        </div>\r\n        <div className=\"Calendar__section CalendarMenu\">\r\n          <div className=\"CalendarMenu__tag\">\r\n            <span>저녁</span>\r\n          </div>\r\n          {\r\n            (calendarData[2] && calendarData[2].id)\r\n            ? <CalendarItemContent \r\n                name={calendarData[2].name}\r\n                id={calendarData[2].id}\r\n                img={calendarData[2].img}\r\n                setIsDetailPopup={setIsDetailPopup}\r\n                setPopupCookingId={setPopupCookingId}\r\n                islogin={islogin}\r\n                fullCalendarData={fullCalendarData}\r\n                setCalendarData={setCalendarData} \r\n                calendarSelectData={calendarSelectData}\r\n                setCalendarSelectData={setCalendarSelectData} \r\n                eatTime={2} \r\n                week={week} \r\n                setYear={setYear}\r\n                setWeek={setWeek} \r\n                setIsLoading={setIsLoading}\r\n              /> \r\n            : islogin \r\n              ? <CalendarItemAdd \r\n                  setIsListPopup={setIsListPopup} \r\n                  setCalendarSelectData={setCalendarSelectData} \r\n                  eatTime={2} \r\n                  week={week} \r\n                  setYear={setYear}\r\n                  setWeek={setWeek} \r\n                /> \r\n              : <CalendarItemEmpty />\r\n          }\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\n\r\nconst CalendarItemEmpty = (props) => {\r\n  return (\r\n    <div className=\"CalendarMenu__empty\">\r\n      <i className={`fas ${emptyImage[randomImageNumber()]}`}></i>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst CalendarItemAdd = (props) => {\r\n  const { setIsListPopup, setCalendarSelectData, eatTime, week, setYear, setWeek } = props;\r\n\r\n  const handleShowList = useCallback(() => {\r\n    setIsListPopup(true);\r\n    setCalendarSelectData({\r\n      year: setYear,\r\n      week: setWeek,\r\n      planWeek: week,\r\n      planEatTime: eatTime,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <button\r\n      className=\"CalendarMenu__button CalendarMenu__button--add\"\r\n      onClick={handleShowList}\r\n    >\r\n      <i className=\"fas fa-plus\"></i>\r\n      <i className=\"ir\">메뉴 추가</i>\r\n    </button>\r\n  )\r\n}\r\n\r\nconst CalendarItemContent = (props) => {\r\n  const { setIsDetailPopup, name, id, img, setPopupCookingId, islogin, fullCalendarData, setCalendarData, calendarSelectData } = props;\r\n  const { setCalendarSelectData, eatTime, week, setYear, setWeek, setIsLoading } = props;\r\n\r\n  const handleShowDetail = useCallback(() => {\r\n    setPopupCookingId(id);\r\n    setIsDetailPopup(true);\r\n  });\r\n\r\n  const handleDeleteOnCalendar = useCallback(() => {\r\n    setIsLoading(true)\r\n    axios.put(`${host.server}/plan`,{\r\n      year: setYear,\r\n      week: setWeek,\r\n      day: week,\r\n      meal: eatTime,\r\n      recipeId: null,\r\n    },{\r\n        withCredentials: true\r\n    }).then((result) => {\r\n      console.log('success plan delete', result)\r\n        axios.get(`${host.server}/plan/${setYear}/${setWeek}`, {\r\n            withCredentials: true\r\n        }).then((result) => {\r\n            setCalendarData(result.data)\r\n            setIsLoading(false)\r\n        }).catch(error => { console.log('failed', error) })\r\n    }).catch(error => { console.log('failed', error) })\r\n\r\n  }, [setYear, setWeek, week, eatTime]);\r\n\r\n  return (\r\n    <div className=\"CalendarMenu__wrap\">\r\n      <div className=\"CalendarMenu__thumb\">\r\n        <img\r\n          src={img}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div className=\"CalendarMenu__title\">{name}</div>\r\n      <div className=\"CalendarMenu__hover\">\r\n        <button\r\n          className=\"CalendarMenu__button CalendarMenu__button--more\"\r\n          onClick={handleShowDetail}\r\n        >\r\n          <i className=\"fas fa-search\"></i>\r\n          <i className=\"ir\">상세 보기</i>\r\n        </button>\r\n        {\r\n          islogin \r\n          ? \r\n          <button\r\n              className=\"CalendarMenu__button CalendarMenu__button--delete\"\r\n              onClick={handleDeleteOnCalendar}\r\n            >\r\n              <i className=\"far fa-trash-alt\"></i>\r\n              <i className=\"ir\">메뉴 삭제</i>\r\n          </button>\r\n          : null\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalendarItem;\r\n","C:\\project\\weeklyRestaurant-front2\\src\\component\\Loading.jsx",[],{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","severity":1,"message":"304","line":26,"column":15,"nodeType":"305","endLine":26,"endColumn":25},{"ruleId":"306","severity":1,"message":"307","line":33,"column":6,"nodeType":"308","endLine":33,"endColumn":18,"suggestions":"309"},{"ruleId":"306","severity":1,"message":"310","line":14,"column":8,"nodeType":"308","endLine":14,"endColumn":10,"suggestions":"311"},{"ruleId":"306","severity":1,"message":"312","line":22,"column":8,"nodeType":"308","endLine":22,"endColumn":10,"suggestions":"313"},{"ruleId":"306","severity":1,"message":"314","line":38,"column":8,"nodeType":"308","endLine":38,"endColumn":19,"suggestions":"315"},{"ruleId":"303","severity":1,"message":"304","line":25,"column":9,"nodeType":"305","endLine":25,"endColumn":48},{"ruleId":"306","severity":1,"message":"316","line":12,"column":6,"nodeType":"308","endLine":12,"endColumn":8,"suggestions":"317"},{"ruleId":"318","severity":1,"message":"319","line":43,"column":35,"nodeType":"320","messageId":"321","endLine":43,"endColumn":37},{"ruleId":"306","severity":1,"message":"322","line":60,"column":6,"nodeType":"308","endLine":60,"endColumn":8,"suggestions":"323"},{"ruleId":"306","severity":1,"message":"324","line":121,"column":6,"nodeType":"308","endLine":121,"endColumn":19,"suggestions":"325"},{"ruleId":"306","severity":1,"message":"326","line":189,"column":25,"nodeType":"327","endLine":189,"endColumn":36},{"ruleId":"306","severity":1,"message":"328","line":208,"column":6,"nodeType":"308","endLine":208,"endColumn":19,"suggestions":"329"},{"ruleId":"306","severity":1,"message":"330","line":504,"column":6,"nodeType":"308","endLine":504,"endColumn":57,"suggestions":"331"},{"ruleId":"332","severity":1,"message":"333","line":26,"column":11,"nodeType":"334","endLine":26,"endColumn":39},{"ruleId":"306","severity":1,"message":"326","line":13,"column":39,"nodeType":"327","endLine":13,"endColumn":50},{"ruleId":"306","severity":1,"message":"326","line":32,"column":32,"nodeType":"327","endLine":32,"endColumn":43},{"ruleId":"306","severity":1,"message":"335","line":76,"column":8,"nodeType":"308","endLine":76,"endColumn":29,"suggestions":"336"},{"ruleId":"306","severity":1,"message":"326","line":8,"column":31,"nodeType":"327","endLine":8,"endColumn":42},{"ruleId":"306","severity":1,"message":"310","line":19,"column":8,"nodeType":"308","endLine":19,"endColumn":10,"suggestions":"337"},{"ruleId":"306","severity":1,"message":"326","line":9,"column":19,"nodeType":"327","endLine":9,"endColumn":30},{"ruleId":"306","severity":1,"message":"326","line":70,"column":24,"nodeType":"327","endLine":70,"endColumn":35},{"ruleId":"306","severity":1,"message":"338","line":98,"column":6,"nodeType":"308","endLine":98,"endColumn":24,"suggestions":"339"},{"ruleId":"306","severity":1,"message":"340","line":102,"column":6,"nodeType":"308","endLine":102,"endColumn":20,"suggestions":"341"},{"ruleId":"306","severity":1,"message":"326","line":105,"column":24,"nodeType":"327","endLine":105,"endColumn":35},{"ruleId":"306","severity":1,"message":"326","line":131,"column":24,"nodeType":"327","endLine":131,"endColumn":35},{"ruleId":"306","severity":1,"message":"326","line":172,"column":25,"nodeType":"327","endLine":172,"endColumn":36},{"ruleId":"306","severity":1,"message":"316","line":11,"column":8,"nodeType":"308","endLine":11,"endColumn":10,"suggestions":"342"},{"ruleId":"343","severity":1,"message":"344","line":13,"column":12,"nodeType":"327","messageId":"345","endLine":13,"endColumn":26},{"ruleId":"306","severity":1,"message":"346","line":21,"column":9,"nodeType":"308","endLine":21,"endColumn":62,"suggestions":"347"},{"ruleId":"306","severity":1,"message":"326","line":24,"column":33,"nodeType":"327","endLine":24,"endColumn":44},{"ruleId":"348","severity":1,"message":"349","line":53,"column":25,"nodeType":"334","endLine":53,"endColumn":71},{"ruleId":"348","severity":1,"message":"349","line":56,"column":29,"nodeType":"334","endLine":58,"endColumn":31},{"ruleId":"343","severity":1,"message":"350","line":2,"column":8,"nodeType":"327","messageId":"345","endLine":2,"endColumn":13},{"ruleId":"343","severity":1,"message":"351","line":3,"column":7,"nodeType":"327","messageId":"345","endLine":3,"endColumn":11},{"ruleId":"306","severity":1,"message":"326","line":142,"column":26,"nodeType":"327","endLine":142,"endColumn":37},{"ruleId":"343","severity":1,"message":"352","line":164,"column":90,"nodeType":"327","messageId":"345","endLine":164,"endColumn":105},{"ruleId":"306","severity":1,"message":"326","line":170,"column":28,"nodeType":"327","endLine":170,"endColumn":39},{"ruleId":"306","severity":1,"message":"353","line":190,"column":6,"nodeType":"308","endLine":190,"endColumn":26,"suggestions":"354"},{"ruleId":"306","severity":1,"message":"355","line":200,"column":6,"nodeType":"308","endLine":200,"endColumn":39,"suggestions":"356"},{"ruleId":"299","replacedBy":"357"},{"ruleId":"301","replacedBy":"358"},{"ruleId":"306","severity":1,"message":"330","line":27,"column":6,"nodeType":"308","endLine":27,"endColumn":52,"suggestions":"359"},{"ruleId":"318","severity":1,"message":"319","line":43,"column":38,"nodeType":"320","messageId":"321","endLine":43,"endColumn":40},{"ruleId":"306","severity":1,"message":"360","line":59,"column":6,"nodeType":"308","endLine":59,"endColumn":8,"suggestions":"361"},{"ruleId":"306","severity":1,"message":"362","line":81,"column":6,"nodeType":"308","endLine":81,"endColumn":45,"suggestions":"363"},{"ruleId":"306","severity":1,"message":"362","line":93,"column":6,"nodeType":"308","endLine":93,"endColumn":33,"suggestions":"364"},{"ruleId":"343","severity":1,"message":"365","line":1,"column":28,"nodeType":"327","messageId":"345","endLine":1,"endColumn":37},{"ruleId":"343","severity":1,"message":"366","line":1,"column":38,"nodeType":"327","messageId":"345","endLine":1,"endColumn":46},{"ruleId":"306","severity":1,"message":"330","line":26,"column":8,"nodeType":"308","endLine":26,"endColumn":66,"suggestions":"367"},{"ruleId":"306","severity":1,"message":"362","line":37,"column":8,"nodeType":"308","endLine":37,"endColumn":35,"suggestions":"368"},{"ruleId":"299","replacedBy":"369"},{"ruleId":"301","replacedBy":"370"},{"ruleId":"306","severity":1,"message":"314","line":20,"column":8,"nodeType":"308","endLine":20,"endColumn":20,"suggestions":"371"},{"ruleId":"303","severity":1,"message":"304","line":29,"column":15,"nodeType":"305","endLine":29,"endColumn":25},{"ruleId":"306","severity":1,"message":"307","line":34,"column":6,"nodeType":"308","endLine":34,"endColumn":18,"suggestions":"372"},{"ruleId":"306","severity":1,"message":"373","line":28,"column":6,"nodeType":"308","endLine":28,"endColumn":8,"suggestions":"374"},{"ruleId":"306","severity":1,"message":"316","line":14,"column":6,"nodeType":"308","endLine":14,"endColumn":8,"suggestions":"375"},{"ruleId":"306","severity":1,"message":"376","line":31,"column":6,"nodeType":"308","endLine":31,"endColumn":8,"suggestions":"377"},{"ruleId":"303","severity":1,"message":"304","line":25,"column":9,"nodeType":"305","endLine":25,"endColumn":48},{"ruleId":"306","severity":1,"message":"373","line":24,"column":6,"nodeType":"308","endLine":24,"endColumn":8,"suggestions":"378"},{"ruleId":"318","severity":1,"message":"319","line":48,"column":36,"nodeType":"320","messageId":"321","endLine":48,"endColumn":38},{"ruleId":"306","severity":1,"message":"379","line":67,"column":6,"nodeType":"308","endLine":67,"endColumn":8,"suggestions":"380"},{"ruleId":"306","severity":1,"message":"324","line":128,"column":6,"nodeType":"308","endLine":128,"endColumn":19,"suggestions":"381"},{"ruleId":"306","severity":1,"message":"376","line":196,"column":6,"nodeType":"308","endLine":196,"endColumn":19,"suggestions":"382"},{"ruleId":"306","severity":1,"message":"326","line":198,"column":25,"nodeType":"327","endLine":198,"endColumn":36},{"ruleId":"306","severity":1,"message":"383","line":220,"column":6,"nodeType":"308","endLine":220,"endColumn":19,"suggestions":"384"},{"ruleId":"306","severity":1,"message":"330","line":516,"column":6,"nodeType":"308","endLine":516,"endColumn":57,"suggestions":"385"},{"ruleId":"306","severity":1,"message":"310","line":15,"column":8,"nodeType":"308","endLine":15,"endColumn":10,"suggestions":"386"},{"ruleId":"306","severity":1,"message":"387","line":25,"column":8,"nodeType":"308","endLine":25,"endColumn":10,"suggestions":"388"},{"ruleId":"306","severity":1,"message":"389","line":38,"column":8,"nodeType":"308","endLine":38,"endColumn":19,"suggestions":"390"},{"ruleId":"332","severity":1,"message":"333","line":26,"column":11,"nodeType":"334","endLine":26,"endColumn":39},{"ruleId":"306","severity":1,"message":"326","line":15,"column":39,"nodeType":"327","endLine":15,"endColumn":50},{"ruleId":"306","severity":1,"message":"391","line":67,"column":8,"nodeType":"308","endLine":67,"endColumn":49,"suggestions":"392"},{"ruleId":"306","severity":1,"message":"326","line":9,"column":19,"nodeType":"327","endLine":9,"endColumn":30},{"ruleId":"306","severity":1,"message":"326","line":70,"column":24,"nodeType":"327","endLine":70,"endColumn":35},{"ruleId":"306","severity":1,"message":"393","line":100,"column":6,"nodeType":"308","endLine":100,"endColumn":24,"suggestions":"394"},{"ruleId":"306","severity":1,"message":"340","line":104,"column":6,"nodeType":"308","endLine":104,"endColumn":20,"suggestions":"395"},{"ruleId":"306","severity":1,"message":"326","line":107,"column":24,"nodeType":"327","endLine":107,"endColumn":35},{"ruleId":"306","severity":1,"message":"326","line":133,"column":24,"nodeType":"327","endLine":133,"endColumn":35},{"ruleId":"306","severity":1,"message":"326","line":174,"column":25,"nodeType":"327","endLine":174,"endColumn":36},{"ruleId":"343","severity":1,"message":"344","line":13,"column":12,"nodeType":"327","messageId":"345","endLine":13,"endColumn":26},{"ruleId":"343","severity":1,"message":"396","line":13,"column":48,"nodeType":"327","messageId":"345","endLine":13,"endColumn":60},{"ruleId":"306","severity":1,"message":"346","line":21,"column":9,"nodeType":"308","endLine":21,"endColumn":62,"suggestions":"397"},{"ruleId":"306","severity":1,"message":"398","line":46,"column":8,"nodeType":"308","endLine":46,"endColumn":32,"suggestions":"399"},{"ruleId":"348","severity":1,"message":"349","line":55,"column":25,"nodeType":"334","endLine":55,"endColumn":71},{"ruleId":"348","severity":1,"message":"349","line":58,"column":29,"nodeType":"334","endLine":60,"endColumn":31},{"ruleId":"343","severity":1,"message":"365","line":1,"column":28,"nodeType":"327","messageId":"345","endLine":1,"endColumn":37},{"ruleId":"343","severity":1,"message":"366","line":1,"column":38,"nodeType":"327","messageId":"345","endLine":1,"endColumn":46},{"ruleId":"306","severity":1,"message":"330","line":26,"column":8,"nodeType":"308","endLine":26,"endColumn":66,"suggestions":"400"},{"ruleId":"306","severity":1,"message":"362","line":37,"column":8,"nodeType":"308","endLine":37,"endColumn":35,"suggestions":"401"},{"ruleId":"306","severity":1,"message":"316","line":11,"column":8,"nodeType":"308","endLine":11,"endColumn":10,"suggestions":"402"},{"ruleId":"306","severity":1,"message":"376","line":30,"column":8,"nodeType":"308","endLine":30,"endColumn":24,"suggestions":"403"},{"ruleId":"306","severity":1,"message":"330","line":27,"column":6,"nodeType":"308","endLine":27,"endColumn":52,"suggestions":"404"},{"ruleId":"318","severity":1,"message":"319","line":43,"column":39,"nodeType":"320","messageId":"321","endLine":43,"endColumn":41},{"ruleId":"306","severity":1,"message":"360","line":59,"column":6,"nodeType":"308","endLine":59,"endColumn":8,"suggestions":"405"},{"ruleId":"306","severity":1,"message":"362","line":81,"column":6,"nodeType":"308","endLine":81,"endColumn":45,"suggestions":"406"},{"ruleId":"306","severity":1,"message":"362","line":93,"column":6,"nodeType":"308","endLine":93,"endColumn":33,"suggestions":"407"},{"ruleId":"306","severity":1,"message":"326","line":8,"column":31,"nodeType":"327","endLine":8,"endColumn":42},{"ruleId":"306","severity":1,"message":"310","line":19,"column":8,"nodeType":"308","endLine":19,"endColumn":10,"suggestions":"408"},{"ruleId":"306","severity":1,"message":"376","line":30,"column":8,"nodeType":"308","endLine":30,"endColumn":24,"suggestions":"409"},{"ruleId":"343","severity":1,"message":"366","line":1,"column":30,"nodeType":"327","messageId":"345","endLine":1,"endColumn":38},{"ruleId":"343","severity":1,"message":"365","line":1,"column":40,"nodeType":"327","messageId":"345","endLine":1,"endColumn":49},{"ruleId":"343","severity":1,"message":"410","line":12,"column":198,"nodeType":"327","messageId":"345","endLine":12,"endColumn":204},{"ruleId":"306","severity":1,"message":"326","line":145,"column":26,"nodeType":"327","endLine":145,"endColumn":37},{"ruleId":"343","severity":1,"message":"411","line":167,"column":72,"nodeType":"327","messageId":"345","endLine":167,"endColumn":88},{"ruleId":"343","severity":1,"message":"412","line":167,"column":107,"nodeType":"327","messageId":"345","endLine":167,"endColumn":125},{"ruleId":"343","severity":1,"message":"413","line":168,"column":11,"nodeType":"327","messageId":"345","endLine":168,"endColumn":32},{"ruleId":"306","severity":1,"message":"326","line":170,"column":28,"nodeType":"327","endLine":170,"endColumn":39},{"ruleId":"306","severity":1,"message":"414","line":195,"column":6,"nodeType":"308","endLine":195,"endColumn":39,"suggestions":"415"},"no-native-reassign",["416"],"no-negated-in-lhs",["417"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'setIslogin'. Either include it or remove the dependency array. If 'setIslogin' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["418"],"React Hook useEffect has a missing dependency: 'handleDetail'. Either include it or remove the dependency array.",["419"],"React Hook useCallback has a missing dependency: 'cookingId'. Either include it or remove the dependency array.",["420"],"React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["421"],"React Hook useEffect has a missing dependency: 'handleList'. Either include it or remove the dependency array.",["422"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'cookingId'. Either include it or remove the dependency array.",["423"],"React Hook useEffect has a missing dependency: 'cookingForm'. Either include it or remove the dependency array. You can also do a functional update 'setCookingForm(c => ...)' if you only need 'cookingForm' in the 'setCookingForm' call.",["424"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","React Hook useCallback has missing dependencies: 'cookingId' and 'history'. Either include them or remove the dependency array.",["425"],"React Hook useCallback has missing dependencies: 'setCategoryOptionArr' and 'setHandleValue'. Either include them or remove the dependency array. If 'setCategoryOptionArr' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["426"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useCallback has missing dependencies: 'inventoryPopupInfo.modifyMode', 'inventoryPopupInfo.modifyModeName', and 'inventoryPopupInfo.modifyModeUnit'. Either include them or remove the dependency array.",["427"],["428"],"React Hook useEffect has a missing dependency: 'setCalendarData'. Either include it or remove the dependency array.",["429"],"React Hook useEffect has missing dependencies: 'calendarCalc', 'calendarDateInfo.setDate', 'calendarDateInfo.setDay', 'calendarDateInfo.setMonth', and 'calendarDateInfo.setYear'. Either include them or remove the dependency array.",["430"],["431"],"no-unused-vars","'popupCookingId' is assigned a value but never used.","unusedVar","React Hook useCallback has a missing dependency: 'id'. Either include it or remove the dependency array.",["432"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'axios' is defined but never used.","'host' is assigned a value but never used.","'setCalendarData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fullCalendarData.data' and 'onClickDelete'. Either include them or remove the dependency array.",["433"],"React Hook useCallback has a missing dependency: 'setCalendarSelectData'. Either include it or remove the dependency array.",["434"],["416"],["417"],["435"],"React Hook useEffect has missing dependencies: 'baseOption', 'cookingForm.contents', 'group', and 'index'. Either include them or remove the dependency array. If 'setSelectedKey' needs the current value of 'baseOption', you can also switch to useReducer instead of useState and read 'baseOption' in the reducer.",["436"],"React Hook useCallback has a missing dependency: 'setHandleValue'. Either include it or remove the dependency array. If 'setHandleValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["437"],["438"],"'useEffect' is defined but never used.","'useState' is defined but never used.",["439"],["440"],["416"],["417"],["441"],["442"],"React Hook useEffect has a missing dependency: 'setIsLoading'. Either include it or remove the dependency array. If 'setIsLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["443"],["444"],"React Hook useCallback has a missing dependency: 'setIsLoading'. Either include it or remove the dependency array. If 'setIsLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["445"],["446"],"React Hook useEffect has missing dependencies: 'cookingId' and 'setIsLoading'. Either include them or remove the dependency array. If 'setIsLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["447"],["448"],["449"],"React Hook useCallback has missing dependencies: 'cookingId', 'history', and 'setIsLoading'. Either include them or remove the dependency array. If 'setIsLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["450"],["451"],["452"],"React Hook useCallback has missing dependencies: 'cookingId' and 'setIsLoading'. Either include them or remove the dependency array. If 'setIsLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["453"],"React Hook useCallback has missing dependencies: 'history' and 'setIsLoading'. Either include them or remove the dependency array. If 'setIsLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["454"],"React Hook useCallback has missing dependencies: 'ingredient', 'setIngredient', 'setInventoryPopupInfo', and 'setIsLoading'. Either include them or remove the dependency array.",["455"],"React Hook useEffect has missing dependencies: 'setCalendarData' and 'setIsLoading'. Either include them or remove the dependency array.",["456"],["457"],"'calendarData' is assigned a value but never used.",["458"],"React Hook useCallback has missing dependencies: 'setCalendarData', 'setIsListPopup', 'setIsLoading', and 'setPopupCookingId'. Either include them or remove the dependency array.",["459"],["460"],["461"],["462"],["463"],["464"],["465"],["466"],["467"],["468"],["469"],"'setDay' is assigned a value but never used.","'fullCalendarData' is assigned a value but never used.","'calendarSelectData' is assigned a value but never used.","'setCalendarSelectData' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'setCalendarData' and 'setIsLoading'. Either include them or remove the dependency array.",["470"],"no-global-assign","no-unsafe-negation",{"desc":"471","fix":"472"},{"desc":"473","fix":"474"},{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},{"desc":"475","fix":"481"},{"desc":"482","fix":"483"},{"desc":"484","fix":"485"},{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},{"desc":"473","fix":"490"},{"desc":"491","fix":"492"},{"desc":"493","fix":"494"},{"desc":"479","fix":"495"},{"desc":"496","fix":"497"},{"desc":"498","fix":"499"},{"desc":"500","fix":"501"},{"desc":"502","fix":"503"},{"desc":"504","fix":"505"},{"desc":"506","fix":"507"},{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},{"desc":"508","fix":"512"},{"desc":"513","fix":"514"},{"desc":"471","fix":"515"},{"desc":"516","fix":"517"},{"desc":"479","fix":"518"},{"desc":"516","fix":"519"},{"desc":"516","fix":"520"},{"desc":"521","fix":"522"},{"desc":"482","fix":"523"},{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"486","fix":"528"},{"desc":"473","fix":"529"},{"desc":"521","fix":"530"},{"desc":"531","fix":"532"},{"desc":"533","fix":"534"},{"desc":"535","fix":"536"},{"desc":"493","fix":"537"},{"desc":"496","fix":"538"},{"desc":"539","fix":"540"},{"desc":"510","fix":"541"},{"desc":"508","fix":"542"},{"desc":"479","fix":"543"},{"desc":"516","fix":"544"},{"desc":"502","fix":"545"},{"desc":"504","fix":"546"},{"desc":"506","fix":"547"},{"desc":"508","fix":"548"},{"desc":"473","fix":"549"},{"desc":"550","fix":"551"},{"desc":"552","fix":"553"},"Update the dependencies array to be: [loginValue, setIslogin]",{"range":"554","text":"555"},"Update the dependencies array to be: [handleDetail]",{"range":"556","text":"557"},"Update the dependencies array to be: [cookingId]",{"range":"558","text":"559"},"Update the dependencies array to be: [cookingId, history]",{"range":"560","text":"561"},"Update the dependencies array to be: [handleList]",{"range":"562","text":"563"},{"range":"564","text":"559"},"Update the dependencies array to be: [cookingForm, handleValue]",{"range":"565","text":"566"},"Update the dependencies array to be: [cookingForm, cookingId, history]",{"range":"567","text":"568"},"Update the dependencies array to be: [categoryOptionArr, group, setCategoryOptionArr, cookingForm.contents, setHandleValue, baseOption]",{"range":"569","text":"570"},"Update the dependencies array to be: [inventoryInputValue, inventoryPopupInfo.modifyMode, inventoryPopupInfo.modifyModeName, inventoryPopupInfo.modifyModeUnit]",{"range":"571","text":"572"},{"range":"573","text":"557"},"Update the dependencies array to be: [calendarDateInfo, setCalendarData]",{"range":"574","text":"575"},"Update the dependencies array to be: [calendarCalc, calendarData, calendarDateInfo.setDate, calendarDateInfo.setDay, calendarDateInfo.setMonth, calendarDateInfo.setYear]",{"range":"576","text":"577"},{"range":"578","text":"563"},"Update the dependencies array to be: [setIsListPopup, setIsDetailPopup, setPopupCookingId, id]",{"range":"579","text":"580"},"Update the dependencies array to be: [calendarSelectData, fullCalendarData.data, onClickDelete]",{"range":"581","text":"582"},"Update the dependencies array to be: [setCalendarSelectData, setYear, setWeek, week, eatTime]",{"range":"583","text":"584"},"Update the dependencies array to be: [categoryOptionArr, cookingForm.contents, group, index, setCategoryOptionArr, setHandleValue]",{"range":"585","text":"586"},"Update the dependencies array to be: [baseOption, cookingForm.contents, group, index]",{"range":"587","text":"588"},"Update the dependencies array to be: [cookingForm.contents, group, index, baseOption, setHandleValue]",{"range":"589","text":"590"},"Update the dependencies array to be: [cookingForm.contents, group, index, setHandleValue]",{"range":"591","text":"592"},"Update the dependencies array to be: [categoryOptionArr, group, index, setCategoryOptionArr, cookingForm.contents, baseOption, setHandleValue]",{"range":"593","text":"594"},{"range":"595","text":"592"},"Update the dependencies array to be: [history, setIslogin]",{"range":"596","text":"597"},{"range":"598","text":"555"},"Update the dependencies array to be: [setIsLoading]",{"range":"599","text":"600"},{"range":"601","text":"563"},{"range":"602","text":"600"},{"range":"603","text":"600"},"Update the dependencies array to be: [cookingId, setIsLoading]",{"range":"604","text":"605"},{"range":"606","text":"566"},"Update the dependencies array to be: [cookingForm, setIsLoading]",{"range":"607","text":"608"},"Update the dependencies array to be: [cookingForm, cookingId, history, setIsLoading]",{"range":"609","text":"610"},{"range":"611","text":"570"},{"range":"612","text":"557"},{"range":"613","text":"605"},"Update the dependencies array to be: [cookingId, history, setIsLoading]",{"range":"614","text":"615"},"Update the dependencies array to be: [ingredient, inventoryPopupInfo, setIsLoading, inventoryInputValue, setIngredient, setInventoryPopupInfo]",{"range":"616","text":"617"},"Update the dependencies array to be: [calendarDateInfo, setCalendarData, setIsLoading]",{"range":"618","text":"619"},{"range":"620","text":"577"},{"range":"621","text":"580"},"Update the dependencies array to be: [calendarSelectData.planEatTime, calendarSelectData.planWeek, calendarSelectData.week, calendarSelectData.year, id, setCalendarData, setIsListPopup, setIsLoading, setPopupCookingId]",{"range":"622","text":"623"},{"range":"624","text":"594"},{"range":"625","text":"592"},{"range":"626","text":"563"},{"range":"627","text":"600"},{"range":"628","text":"586"},{"range":"629","text":"588"},{"range":"630","text":"590"},{"range":"631","text":"592"},{"range":"632","text":"557"},"Update the dependencies array to be: [popupCookingId, setIsLoading]",{"range":"633","text":"634"},"Update the dependencies array to be: [setIsLoading, setYear, setWeek, week, eatTime, setCalendarData]",{"range":"635","text":"636"},[971,983],"[loginValue, setIslogin]",[424,426],"[handleDetail]",[720,722],"[cookingId]",[1251,1262],"[cookingId, history]",[308,310],"[handleList]",[1983,1985],[3223,3236],"[cookingForm, handleValue]",[5212,5225],"[cookingForm, cookingId, history]",[16125,16176],"[categoryOptionArr, group, setCategoryOptionArr, cookingForm.contents, setHandleValue, baseOption]",[2561,2582],"[inventoryInputValue, inventoryPopupInfo.modifyMode, inventoryPopupInfo.modifyModeName, inventoryPopupInfo.modifyModeUnit]",[530,532],[3202,3220],"[calendarDateInfo, setCalendarData]",[3374,3388],"[calendarCalc, calendarData, calendarDateInfo.setDate, calendarDateInfo.setDay, calendarDateInfo.setMonth, calendarDateInfo.setYear]",[439,441],[780,833],"[setIsListPopup, setIsDetailPopup, setPopupCookingId, id]",[6669,6689],"[calendarSelectData, fullCalendarData.data, onClickDelete]",[6915,6948],"[setCalendarSelectData, setYear, setWeek, week, eatTime]",[849,895],"[categoryOptionArr, cookingForm.contents, group, index, setCategoryOptionArr, setHandleValue]",[1613,1615],"[baseOption, cookingForm.contents, group, index]",[2214,2253],"[cookingForm.contents, group, index, baseOption, setHandleValue]",[2526,2553],"[cookingForm.contents, group, index, setHandleValue]",[853,911],"[categoryOptionArr, group, index, setCategoryOptionArr, cookingForm.contents, baseOption, setHandleValue]",[1210,1237],[639,651],"[history, setIslogin]",[1020,1032],[860,862],"[setIsLoading]",[369,371],[1025,1027],[871,873],[2244,2246],"[cookingId, setIsLoading]",[3485,3498],[4926,4939],"[cookingForm, setIsLoading]",[5560,5573],"[cookingForm, cookingId, history, setIsLoading]",[16671,16722],[483,485],[842,844],[1313,1324],"[cookingId, history, setIsLoading]",[2406,2447],"[ingredient, inventoryPopupInfo, setIsLoading, inventoryInputValue, setIngredient, setInventoryPopupInfo]",[3266,3284],"[calendarDateInfo, setCalendarData, setIsLoading]",[3438,3452],[794,847],[1797,1821],"[calendarSelectData.planEatTime, calendarSelectData.planWeek, calendarSelectData.week, calendarSelectData.year, id, setCalendarData, setIsListPopup, setIsLoading, setPopupCookingId]",[853,911],[1210,1237],[452,454],[1184,1200],[857,903],[1624,1626],[2224,2263],[2539,2566],[543,545],[944,960],"[popupCookingId, setIsLoading]",[6980,7013],"[setIsLoading, setYear, setWeek, week, eatTime, setCalendarData]"]